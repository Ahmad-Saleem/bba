{"version":3,"sources":["utilities/industries-list.js","utilities/states-list.js","components/modals/AddCompany.js","components/contacts/ModalAddContactToLocation.js","components/modal.js","components/ModalContext.js","components/useModal.js","redux/location/locationReducer.js","redux/location/locationTypes.js","redux/opportunity/opportunityReducer.js","redux/opportunity/opportunityTypes.js","redux/contacts/contactsReducer.js","redux/contacts/contactsTypes.js","redux/companies/companiesReducer.js","redux/companies/companiesTypes.js","redux/user/userReducer.js","redux/rootReducer.js","redux/store.js","components/companies/ModalAddCompanyForm.js","components/Header.js","components/Navbar.js","components/companies/ContactsList.js","components/locations/ModalAddLocation.js","redux/location/locationActions.js","components/companies/LocationsList.js","components/opportunities/ModalAddOpportunity.js","redux/opportunity/opportunityActions.js","components/companies/OpportunitiesList.js","components/companies/ProjectsList.js","components/companies/CompanyDetail.js","components/locations/ContactsList.js","components/locations/OpportunitiesList.js","components/locations/EquipmentList.js","components/locations/ProjectsList.js","redux/equipment/equipmentTypes.js","redux/equipment/equipmentActions.js","components/locations/LocationDetail.js","components/companies/CompaniesList.js","components/contacts/ModalAddContact.js","components/contacts/ContactsList.js","components/contacts/ActivityItem.js","components/contacts/ActivityTab.js","components/contacts/ContactDetail.js","components/opportunities/OpportunitiesList.js","components/opportunities/ModalAddProposal.js","components/opportunities/ProposalTab.js","components/opportunities/ContactsTab.js","components/opportunities/ActivityTab.js","components/opportunities/JourneyStages.js","components/opportunities/OpportunityDetail.js","components/Root.js","serviceWorker.js","index.js"],"names":["industries","states","gql","DataTableCell","displayName","ModalContext","ModalContainer","React","useContext","modalContent","modalHeading","handleModal","modal","form","ReactDOM","createPortal","ariaHideApp","isOpen","onRequestClose","heading","className","document","querySelector","Provider","createContext","ModalProvider","children","useState","setModal","setModalContent","setModalHeading","content","useModal","modalForm","value","initialState","locations","locationReducer","state","action","type","payload","console","log","opportunities","opportunityReducer","contacts","contactReducer","companies","companyReducer","user","id","name","userReducer","rootReducer","combineReducers","location","opportunity","company","companiesReducer","contactsReducer","store","createStore","applyMiddleware","logger","thunk","ADD_COMPANY","CompanyForm","auth","useMutation","addCompany","error","useForm","register","handleSubmit","control","reset","watch","onSubmit","data","variables","input","website","as","htmlFor","ref","defaultValue","map","key","Code","State","industry","HeaderNotificationsCustomContent","props","items","item","unread","alt","src","avatar","title","href","comment","timePosted","Header","logoSrc","onSkipToContent","onSkipToNav","notificationCount","popover","ariaLabelledby","body","NavBar","history","useHistory","currentLocation","setCurrentLocation","useLocation","handleNav","path","push","useEffect","pathname","region","triggerName","onSearch","e","target","modalHeaderButton","label","iconText","description","size","iconNode","category","navigation","active","includes","onClick","RecordLink","to","ContactsList","SINGLE","useQuery","parseInt","loading","iconPath","headerActions","filter","length","onChange","icon","empty","fixedLayout","on","property","AddLocation","dispatch","useDispatch","LocationLink","LocationsList","useSelector","triggerModal","OpportunityForm","startDateValue","closeDateValue","labels","event","handleChange","dataAsArray","Object","keys","onCalendarFocus","formatter","date","moment","format","parser","dateString","toDate","OpportunitiesList","addOpportunity","getOpportunitiesByCompany","amount","stage","ProjectsList","Number","projects","CompanyDetail","match","params","companyId","UPDATE_COMPANY","updateCompany","companyData","errors","details","truncate","created_at","theme","assistiveText","onRenderActions","Fragment","variant","align","iconCategory","iconName","iconVariant","options","company_name","iconRight","placeholder","city","getContactsByLocation","getOpportunitiesByLocation","EquipmentList","equipment","setEquipment","getEquipmentByLocation","single","getProjectsByLocation","addEquipment","connect","array","location_id","locationId","company_id","address","Date","getTime","licenseKey","customer","userId","settings","fields","onData","results","a","arr","obj","cfm","replace","newObj","building_code","system_name","water","power","render","importer","launch","phone_number","COMPANIES","CompanyLink","LocationCell","CompaniesList","setItems","info","onRenderControls","onInput","toLowerCase","filterTable","AddContactForm","CONTACTS","toggleModal","selectRows","ActivityItem","activity","link","actor","aria-controls","aria-hidden","ActivityTab","ContactDetail","contactId","contact","contact_name","OPPORTUNITIES","is_opportunity","project_name","created_by","user_name","start_date","board","columns","cards","allowAddColumn","disableColumnDrag","renderColumnHeader","removeColumn","renameColumn","addCard","renderCard","removeCard","dragging","Card","initialBoard","date_closed","building","price","AddProposal","selection","setSelection","step","setStep","onRowChange","reduce","prev","next","ProposalTab","proposals","dropdown","ContactsTab","JourneyStages","role","aria-orientation","aria-selected","tabindex","OpportunityDetail","setValue","expected_start_date","actual_start_date","estimated_project_length","expected_kickoff_call","actual_kickoff_call","primary_contact","notes","total_amount","proposal_items","draw_push","building_name","first_name","last_name","email","phone","is_primary","setOpportunity","displayType","thousandSeparator","prefix","onBlur","opp","client","ApolloClient","uri","cache","InMemoryCache","onError","networkError","graphQLErrors","Root","exact","component","LocationDetail","Boolean","window","hostname","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0543985.chunk.js","sourcesContent":["export const industries = [\n{\n\"name\": \"Industry \"\n},\n{\n\"name\": \"Accounting \"\n},\n{\n\"name\": \"Airlines/Aviation\"\n},\n{\n\"name\": \"Alternative Dispute Resolution\"\n},\n{\n\"name\": \"Alternative Medicine\"\n},\n{\n\"name\": \"Animation\"\n},\n{\n\"name\": \"Apparel/Fashion\"\n},\n{\n\"name\": \"Architecture/Planning\"\n},\n{\n\"name\": \"Arts/Crafts\"\n},\n{\n\"name\": \"Automotive\"\n},\n{\n\"name\": \"Aviation/Aerospace\"\n},\n{\n\"name\": \"Banking/Mortgage\"\n},\n{\n\"name\": \"Biotechnology/Greentech\"\n},\n{\n\"name\": \"Broadcast Media\"\n},\n{\n\"name\": \"Building Materials\"\n},\n{\n\"name\": \"Business Supplies/Equipment\"\n},\n{\n\"name\": \"Capital Markets/Hedge Fund/Private Equity\"\n},\n{\n\"name\": \"Chemicals\"\n},\n{\n\"name\": \"Civic/Social Organization\"\n},\n{\n\"name\": \"Civil Engineering\"\n},\n{\n\"name\": \"Commercial Real Estate\"\n},\n{\n\"name\": \"Computer Games\"\n},\n{\n\"name\": \"Computer Hardware\"\n},\n{\n\"name\": \"Computer Networking\"\n},\n{\n\"name\": \"Computer Software/Engineering\"\n},\n{\n\"name\": \"Computer/Network Security\"\n},\n{\n\"name\": \"Construction\"\n},\n{\n\"name\": \"Consumer Electronics\"\n},\n{\n\"name\": \"Consumer Goods\"\n},\n{\n\"name\": \"Consumer Services\"\n},\n{\n\"name\": \"Cosmetics\"\n},\n{\n\"name\": \"Dairy\"\n},\n{\n\"name\": \"Defense/Space\"\n},\n{\n\"name\": \"Design\"\n},\n{\n\"name\": \"E-Learning\"\n},\n{\n\"name\": \"Education Management\"\n},\n{\n\"name\": \"Electrical/Electronic Manufacturing\"\n},\n{\n\"name\": \"Entertainment/Movie Production\"\n},\n{\n\"name\": \"Environmental Services\"\n},\n{\n\"name\": \"Events Services\"\n},\n{\n\"name\": \"Executive Office\"\n},\n{\n\"name\": \"Facilities Services\"\n},\n{\n\"name\": \"Farming\"\n},\n{\n\"name\": \"Financial Services\"\n},\n{\n\"name\": \"Fine Art\"\n},\n{\n\"name\": \"Fishery\"\n},\n{\n\"name\": \"Food Production\"\n},\n{\n\"name\": \"Food/Beverages\"\n},\n{\n\"name\": \"Fundraising\"\n},\n{\n\"name\": \"Furniture\"\n},\n{\n\"name\": \"Gambling/Casinos\"\n},\n{\n\"name\": \"Glass/Ceramics/Concrete\"\n},\n{\n\"name\": \"Government Administration\"\n},\n{\n\"name\": \"Government Relations\"\n},\n{\n\"name\": \"Graphic Design/Web Design\"\n},\n{\n\"name\": \"Health/Fitness\"\n},\n{\n\"name\": \"Higher Education/Acadamia\"\n},\n{\n\"name\": \"Hospital/Health Care\"\n},\n{\n\"name\": \"Hospitality\"\n},\n{\n\"name\": \"Human Resources/HR\"\n},\n{\n\"name\": \"Import/Export\"\n},\n{\n\"name\": \"Individual/Family Services\"\n},\n{\n\"name\": \"Industrial Automation\"\n},\n{\n\"name\": \"Information Services\"\n},\n{\n\"name\": \"Information Technology/IT\"\n},\n{\n\"name\": \"Insurance\"\n},\n{\n\"name\": \"International Affairs\"\n},\n{\n\"name\": \"International Trade/Development\"\n},\n{\n\"name\": \"Internet\"\n},\n{\n\"name\": \"Investment Banking/Venture\"\n},\n{\n\"name\": \"Investment Management/Hedge Fund/Private Equity\"\n},\n{\n\"name\": \"Judiciary\"\n},\n{\n\"name\": \"Law Enforcement\"\n},\n{\n\"name\": \"Law Practice/Law Firms\"\n},\n{\n\"name\": \"Legal Services\"\n},\n{\n\"name\": \"Legislative Office\"\n},\n{\n\"name\": \"Leisure/Travel\"\n},\n{\n\"name\": \"Library\"\n},\n{\n\"name\": \"Logistics/Procurement\"\n},\n{\n\"name\": \"Luxury Goods/Jewelry\"\n},\n{\n\"name\": \"Machinery\"\n},\n{\n\"name\": \"Management Consulting\"\n},\n{\n\"name\": \"Maritime\"\n},\n{\n\"name\": \"Market Research\"\n},\n{\n\"name\": \"Marketing/Advertising/Sales\"\n},\n{\n\"name\": \"Mechanical or Industrial Engineering\"\n},\n{\n\"name\": \"Media Production\"\n},\n{\n\"name\": \"Medical Equipment\"\n},\n{\n\"name\": \"Medical Practice\"\n},\n{\n\"name\": \"Mental Health Care\"\n},\n{\n\"name\": \"Military Industry\"\n},\n{\n\"name\": \"Mining/Metals\"\n},\n{\n\"name\": \"Motion Pictures/Film\"\n},\n{\n\"name\": \"Museums/Institutions\"\n},\n{\n\"name\": \"Music\"\n},\n{\n\"name\": \"Nanotechnology\"\n},\n{\n\"name\": \"Newspapers/Journalism\"\n},\n{\n\"name\": \"Non-Profit/Volunteering\"\n},\n{\n\"name\": \"Oil/Energy/Solar/Greentech\"\n},\n{\n\"name\": \"Online Publishing\"\n},\n{\n\"name\": \"Other Industry\"\n},\n{\n\"name\": \"Outsourcing/Offshoring\"\n},\n{\n\"name\": \"Package/Freight Delivery\"\n},\n{\n\"name\": \"Packaging/Containers\"\n},\n{\n\"name\": \"Paper/Forest Products\"\n},\n{\n\"name\": \"Performing Arts\"\n},\n{\n\"name\": \"Pharmaceuticals\"\n},\n{\n\"name\": \"Philanthropy\"\n},\n{\n\"name\": \"Photography\"\n},\n{\n\"name\": \"Plastics\"\n},\n{\n\"name\": \"Political Organization\"\n},\n{\n\"name\": \"Primary/Secondary Education\"\n},\n{\n\"name\": \"Printing\"\n},\n{\n\"name\": \"Professional Training\"\n},\n{\n\"name\": \"Program Development\"\n},\n{\n\"name\": \"Public Relations/PR\"\n},\n{\n\"name\": \"Public Safety\"\n},\n{\n\"name\": \"Publishing Industry\"\n},\n{\n\"name\": \"Railroad Manufacture\"\n},\n{\n\"name\": \"Ranching\"\n},\n{\n\"name\": \"Real Estate/Mortgage\"\n},\n{\n\"name\": \"Recreational Facilities/Services\"\n},\n{\n\"name\": \"Religious Institutions\"\n},\n{\n\"name\": \"Renewables/Environment\"\n},\n{\n\"name\": \"Research Industry\"\n},\n{\n\"name\": \"Restaurants\"\n},\n{\n\"name\": \"Retail Industry\"\n},\n{\n\"name\": \"Security/Investigations\"\n},\n{\n\"name\": \"Semiconductors\"\n},\n{\n\"name\": \"Shipbuilding\"\n},\n{\n\"name\": \"Sporting Goods\"\n},\n{\n\"name\": \"Sports\"\n},\n{\n\"name\": \"Staffing/Recruiting\"\n},\n{\n\"name\": \"Supermarkets\"\n},\n{\n\"name\": \"Telecommunications\"\n},\n{\n\"name\": \"Textiles\"\n},\n{\n\"name\": \"Think Tanks\"\n},\n{\n\"name\": \"Tobacco\"\n},\n{\n\"name\": \"Translation/Localization\"\n},\n{\n\"name\": \"Transportation\"\n},\n{\n\"name\": \"Utilities\"\n},\n{\n\"name\": \"Venture Capital/VC\"\n},\n{\n\"name\": \"Veterinary\"\n},\n{\n\"name\": \"Warehousing\"\n},\n{\n\"name\": \"Wholesale\"\n},\n{\n\"name\": \"Wine/Spirits\"\n},\n{\n\"name\": \"Wireless\"\n},\n{\n\"name\": \"Writing/Editing\"\n}\n]","export const states = [\n  {\n    \"State\": \"Alabama\",\n    \"Abbrev\": \"Ala.\",\n    \"Code\": \"AL\"\n  },\n  {\n    \"State\": \"Alaska\",\n    \"Abbrev\": \"Alaska\",\n    \"Code\": \"AK\"\n  },\n  {\n    \"State\": \"Arizona\",\n    \"Abbrev\": \"Ariz.\",\n    \"Code\": \"AZ\"\n  },\n  {\n    \"State\": \"Arkansas\",\n    \"Abbrev\": \"Ark.\",\n    \"Code\": \"AR\"\n  },\n  {\n    \"State\": \"California\",\n    \"Abbrev\": \"Calif.\",\n    \"Code\": \"CA\"\n  },\n  {\n    \"State\": \"Colorado\",\n    \"Abbrev\": \"Colo.\",\n    \"Code\": \"CO\"\n  },\n  {\n    \"State\": \"Connecticut\",\n    \"Abbrev\": \"Conn.\",\n    \"Code\": \"CT\"\n  },\n  {\n    \"State\": \"Delaware\",\n    \"Abbrev\": \"Del.\",\n    \"Code\": \"DE\"\n  },\n  {\n    \"State\": \"District of Columbia\",\n    \"Abbrev\": \"D.C.\",\n    \"Code\": \"DC\"\n  },\n  {\n    \"State\": \"Florida\",\n    \"Abbrev\": \"Fla.\",\n    \"Code\": \"FL\"\n  },\n  {\n    \"State\": \"Georgia\",\n    \"Abbrev\": \"Ga.\",\n    \"Code\": \"GA\"\n  },\n  {\n    \"State\": \"Hawaii\",\n    \"Abbrev\": \"Hawaii\",\n    \"Code\": \"HI\"\n  },\n  {\n    \"State\": \"Idaho\",\n    \"Abbrev\": \"Idaho\",\n    \"Code\": \"ID\"\n  },\n  {\n    \"State\": \"Illinois\",\n    \"Abbrev\": \"Ill.\",\n    \"Code\": \"IL\"\n  },\n  {\n    \"State\": \"Indiana\",\n    \"Abbrev\": \"Ind.\",\n    \"Code\": \"IN\"\n  },\n  {\n    \"State\": \"Iowa\",\n    \"Abbrev\": \"Iowa\",\n    \"Code\": \"IA\"\n  },\n  {\n    \"State\": \"Kansas\",\n    \"Abbrev\": \"Kans.\",\n    \"Code\": \"KS\"\n  },\n  {\n    \"State\": \"Kentucky\",\n    \"Abbrev\": \"Ky.\",\n    \"Code\": \"KY\"\n  },\n  {\n    \"State\": \"Louisiana\",\n    \"Abbrev\": \"La.\",\n    \"Code\": \"LA\"\n  },\n  {\n    \"State\": \"Maine\",\n    \"Abbrev\": \"Maine\",\n    \"Code\": \"ME\"\n  },\n  {\n    \"State\": \"Maryland\",\n    \"Abbrev\": \"Md.\",\n    \"Code\": \"MD\"\n  },\n  {\n    \"State\": \"Massachusetts\",\n    \"Abbrev\": \"Mass.\",\n    \"Code\": \"MA\"\n  },\n  {\n    \"State\": \"Michigan\",\n    \"Abbrev\": \"Mich.\",\n    \"Code\": \"MI\"\n  },\n  {\n    \"State\": \"Minnesota\",\n    \"Abbrev\": \"Minn.\",\n    \"Code\": \"MN\"\n  },\n  {\n    \"State\": \"Mississippi\",\n    \"Abbrev\": \"Miss.\",\n    \"Code\": \"MS\"\n  },\n  {\n    \"State\": \"Missouri\",\n    \"Abbrev\": \"Mo.\",\n    \"Code\": \"MO\"\n  },\n  {\n    \"State\": \"Montana\",\n    \"Abbrev\": \"Mont.\",\n    \"Code\": \"MT\"\n  },\n  {\n    \"State\": \"Nebraska\",\n    \"Abbrev\": \"Nebr.\",\n    \"Code\": \"NE\"\n  },\n  {\n    \"State\": \"Nevada\",\n    \"Abbrev\": \"Nev.\",\n    \"Code\": \"NV\"\n  },\n  {\n    \"State\": \"New Hampshire\",\n    \"Abbrev\": \"N.H.\",\n    \"Code\": \"NH\"\n  },\n  {\n    \"State\": \"New Jersey\",\n    \"Abbrev\": \"N.J.\",\n    \"Code\": \"NJ\"\n  },\n  {\n    \"State\": \"New Mexico\",\n    \"Abbrev\": \"N.M.\",\n    \"Code\": \"NM\"\n  },\n  {\n    \"State\": \"New York\",\n    \"Abbrev\": \"N.Y.\",\n    \"Code\": \"NY\"\n  },\n  {\n    \"State\": \"North Carolina\",\n    \"Abbrev\": \"N.C.\",\n    \"Code\": \"NC\"\n  },\n  {\n    \"State\": \"North Dakota\",\n    \"Abbrev\": \"N.D.\",\n    \"Code\": \"ND\"\n  },\n  {\n    \"State\": \"Ohio\",\n    \"Abbrev\": \"Ohio\",\n    \"Code\": \"OH\"\n  },\n  {\n    \"State\": \"Oklahoma\",\n    \"Abbrev\": \"Okla.\",\n    \"Code\": \"OK\"\n  },\n  {\n    \"State\": \"Oregon\",\n    \"Abbrev\": \"Ore.\",\n    \"Code\": \"OR\"\n  },\n  {\n    \"State\": \"Pennsylvania\",\n    \"Abbrev\": \"Pa.\",\n    \"Code\": \"PA\"\n  },\n  {\n    \"State\": \"Rhode Island\",\n    \"Abbrev\": \"R.I.\",\n    \"Code\": \"RI\"\n  },\n  {\n    \"State\": \"South Carolina\",\n    \"Abbrev\": \"S.C.\",\n    \"Code\": \"SC\"\n  },\n  {\n    \"State\": \"South Dakota\",\n    \"Abbrev\": \"S.D.\",\n    \"Code\": \"SD\"\n  },\n  {\n    \"State\": \"Tennessee\",\n    \"Abbrev\": \"Tenn.\",\n    \"Code\": \"TN\"\n  },\n  {\n    \"State\": \"Texas\",\n    \"Abbrev\": \"Tex.\",\n    \"Code\": \"TX\"\n  },\n  {\n    \"State\": \"Utah\",\n    \"Abbrev\": \"Utah\",\n    \"Code\": \"UT\"\n  },\n  {\n    \"State\": \"Vermont\",\n    \"Abbrev\": \"Vt.\",\n    \"Code\": \"VT\"\n  },\n  {\n    \"State\": \"Virginia\",\n    \"Abbrev\": \"Va.\",\n    \"Code\": \"VA\"\n  },\n  {\n    \"State\": \"Washington\",\n    \"Abbrev\": \"Wash.\",\n    \"Code\": \"WA\"\n  },\n  {\n    \"State\": \"West Virginia\",\n    \"Abbrev\": \"W.Va.\",\n    \"Code\": \"WV\"\n  },\n  {\n    \"State\": \"Wisconsin\",\n    \"Abbrev\": \"Wis.\",\n    \"Code\": \"WI\"\n  },\n  {\n    \"State\": \"Wyoming\",\n    \"Abbrev\": \"Wyo.\",\n    \"Code\": \"WY\"\n  }\n]\n","import React, { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport { Input, Modal, Button } from \"@salesforce/design-system-react\";\n\nimport { industries } from \"../../utilities/industries-list\";\nimport { states } from \"../../utilities/states-list\";\n\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst ADD_COMPANY = gql`\n  mutation CreateCompany($input: CompanyInput) {\n    createCompany(input: $input) {\n      id\n      company_name\n    }\n  }\n`;\n\nexport function AddCompany(props) {\n  const [addCompany, { data, error }] = useMutation(ADD_COMPANY);\n\n  const { register, handleSubmit, reset, watch, control } = useForm();\n\n  const onSubmit = (data) => {\n    addCompany({ variables: { input: data } });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(() => onSubmit(data))}>\n      <Controller\n        as={\n          <label htmlFor=\"companyName\">\n            Company Name\n            <Input name=\"company_name\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"company_name\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"website\">\n            Company Domain Name\n            <Input name=\"website\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"website\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <select name=\"industry\" ref={register}>\n            {industries.map((industry) => {\n              return (\n                <option key={industry.name} value={industry.name}>\n                  {industry.name}\n                </option>\n              );\n            })}\n          </select>\n        }\n        control={control}\n        name=\"industry\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"phone_number\">\n            Phone Number\n            <Input name=\"phone_number\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"phone_number\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"city\">\n            City\n            <Input name=\"city\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"city\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <select name=\"state\" ref={register}>\n            {states.map((state) => {\n              return (\n                <option key={state.Code} value={state.State}>\n                  {state.State}\n                </option>\n              );\n            })}\n          </select>\n        }\n        control={control}\n        name=\"state\"\n        defaultValue={\"Texas\"}\n      />\n\n      <Input type=\"submit\" />\n    </form>\n  );\n}\n","import React, {useState,useEffect} from 'react';\nimport {\n  Input,Modal,Button,\n  IconSettings,Icon,\n  DataTable,DataTableColumn,DataTableCell,DataTableRowActions} \nfrom '@salesforce/design-system-react'; \n\nimport { useQuery, gql } from '@apollo/client';\n\nconst CONTACTS = gql`\n  query GetContacts {\n    getContacts {\n      id\n      first_name\n      last_name\n      email\n      phone_number\n    }\n  }\n`;\n\nconst CustomDataTableCell = ({ children, ...props }) => (\n  <DataTableCell title={children} {...props}>\n    <a\n      href=\"javascript:void(0);\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n    >\n      {children}\n    </a>\n  </DataTableCell>\n);\nCustomDataTableCell.displayName = DataTableCell.displayName;\n\nexport function AddContactToLocation(props) {\n  const [modalOpen, setModalOpen] = useState(true)\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  const { loading, error, data } = useQuery(CONTACTS);\n\n  useEffect(() => {\n    setModalOpen(props.toggle)\n  },[props]);\n\n  function toggleModalOpen(){\n    setModalOpen(!modalOpen)\n  };\n\n  function handleChanged(event, data) {\n    setSelectedContacts(data.selection);\n  };\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n  \t<Modal\n      ariaHideApp={false}\n      isOpen={modalOpen}\n      footer={[\n        <Button label=\"Cancel\" onClick={toggleModalOpen} />,\n        <Button label=\"Next\" variant=\"brand\" onClick={toggleModalOpen} />,\n      ]}\n      onRequestClose={toggleModalOpen}\n      heading=\"Add Contacts to Location\"\n    >\n    \t<section className=\"slds-p-around_large\">\n        \n        <DataTable\n            assistiveText={{\n              actionsHeader: 'actions',\n              columnSort: 'sort this column',\n              columnSortedAscending: 'asc',\n              columnSortedDescending: 'desc',\n              selectAllRows: 'Select all rows',\n              selectRow: 'Select this row',\n            }}\n            fixedLayout\n            items={data.getContacts}\n            id=\"DataTableExample-2\"\n            selectRows=\"checkbox\"\n            onRowChange={handleChanged}\n            selection={selectedContacts}\n          >\n            <DataTableColumn\n              label=\"Id\"\n              property=\"id\"\n            >\n\n            </DataTableColumn>\n            <DataTableColumn\n              label=\"First Name\"\n              property=\"first_name\"\n            >\n\n            </DataTableColumn>\n            <DataTableColumn\n              label=\"Last Name\"\n              property=\"last_name\"\n            >\n\n            </DataTableColumn>\n            <DataTableColumn\n              label=\"Email\"\n              property=\"email\"\n            >\n\n            </DataTableColumn>\n            <DataTableColumn\n              label=\"Phone\"\n              property=\"phone_number\"\n            >\n\n            </DataTableColumn>\n        </DataTable>\n\n\n    \t</section>\n    </Modal>\n  )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ModalContext } from \"./ModalContext\";\nimport {Input,Modal,Button} from '@salesforce/design-system-react'; \nimport {AddCompany} from './modals/AddCompany';\nimport {ModalAddContactToLocation} from './contacts/ModalAddContactToLocation'\n\nconst ModalContainer = () => {\n  let { modalContent, modalHeading, handleModal, modal,form } = React.useContext(ModalContext);\n  const closeModal = () => {\n    handleModal(false)\n  }\n  if (modal) {\n    return ReactDOM.createPortal(\n      <Modal\n      ariaHideApp={false}\n      isOpen={modal}\n      onRequestClose={closeModal}\n      heading={modalHeading}\n    >\n    \n      <section className=\"slds-p-around_large\">\n\n          {modalContent}\n        </section>\n      </Modal>,\n      document.querySelector(\"#modal-root\")\n    );\n  } else return null;\n};\n\nexport default ModalContainer;\n","import React from \"react\";\nimport useModal from \"./useModal\";\nimport ModalContainer from \"./modal\";\n\nlet ModalContext;\nlet { Provider } = (ModalContext = React.createContext());\n\nlet ModalProvider = ({ children }) => {\n  let { modal, handleModal, modalContent, modalHeading, modalForm } = useModal();\n  return (\n    <Provider value={{ modal, handleModal, modalContent,modalHeading,modalForm }}>\n      <ModalContainer />\n        {children}\n    </Provider>\n  );\n};\n\nexport { ModalContext, ModalProvider };","import React, {useState,useEffect} from \"react\";\n\nexport default () => {\n  let [modal, setModal] = useState(false);\n  let [modalForm, setModalForm] = useState(\"\");\n  let [modalContent, setModalContent] = useState({});\t\n  let [modalHeading, setModalHeading] = useState(false)\n\n  let handleModal = (content = false, heading) => {\n  \tsetModalHeading(heading)\n    if (content) {\t\n      setModalContent(content);\n    }\n    setModal(!modal)\n\n  };\n\n  return { modal, modalHeading, handleModal, modalContent };\n};\n","import { ADD_LOCATION } from \"./locationTypes\";\n\nconst initialState = {\n  locations: [],\n};\n\nconst locationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_LOCATION:\n      const locations = [...state.locations, action.payload];\n\n      console.log(locations);\n      return {\n        ...state,\n        locations,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default locationReducer;\n","export const ADD_LOCATION = \"ADD_LOCATION\";\n","import { ADD_OPPORTUNITY } from \"./opportunityTypes\";\n\nconst initialState = {\n  opportunities: [],\n};\n\nconst opportunityReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_OPPORTUNITY:\n      const opportunities = [...state.opportunities, action.payload];\n      return {\n        ...state,\n        opportunities,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default opportunityReducer;\n","export const ADD_OPPORTUNITY = \"ADD_OPPORTUNITY\";\n\n//Add more typed here\n//export const DELETE_OPPORTUNITY = \"DELETE_OPPORTUNITY\";\n","import { GET_CONTACTS } from \"./contactsTypes\";\n\nconst initialState = {\n  contacts: [],\n};\n\nconst contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      const contacts = [...state.contacts, action.payload];\n      return {\n        ...state,\n        contacts,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n","export const GET_CONTACTS = \"GET_CONTACTS\";\n","import { GET_COMPANIES } from \"./companiesTypes\";\n\nconst initialState = {\n  companies: [],\n};\n\nconst companyReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COMPANIES:\n      const companies = [...state.companies, action.payload];\n      return {\n        ...state,\n        companies,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default companyReducer;\n","export const GET_COMPANIES = \"GET_COMPANIES\";\n","import { GET_USER } from \"./userTypes\";\n\nconst initialState = {\n  user: {\n    id: 1,\n    name: \"Nelson\",\n  },\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\n\nimport locationReducer from \"./location/locationReducer\";\nimport opportunityReducer from \"./opportunity/opportunityReducer\";\nimport contactsReducer from \"./contacts/contactsReducer\";\nimport companiesReducer from \"./companies/companiesReducer\";\nimport userReducer from \"./user/userReducer\";\n\nconst rootReducer = combineReducers({\n  location: locationReducer,\n  opportunity: opportunityReducer,\n  company: companiesReducer,\n  contacts: contactsReducer,\n  user: userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n// console.log(store);\nexport default store;\n","import React, { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport { Input, Modal, Button } from \"@salesforce/design-system-react\";\n\nimport { industries } from \"../../utilities/industries-list\";\nimport { states } from \"../../utilities/states-list\";\n\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst ADD_COMPANY = gql`\n  mutation CreateCompany($input: CompanyInput!) {\n    createCompany(input: $input) {\n      company_name\n      state\n      city\n      category\n      created_by {\n        id\n      }\n    }\n  }\n`;\n\nexport function CompanyForm({ auth }) {\n  //redux user\n  const { id } = auth.user;\n\n  const [addCompany, { error }] = useMutation(ADD_COMPANY);\n  console.log(error);\n  const { register, handleSubmit, reset, watch, control } = useForm();\n\n  const onSubmit = (data) => {\n    data[\"created_by\"] = id;\n\n    console.log(data);\n\n    addCompany({ variables: { input: { ...data, website: \"test\" } } });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={\n          <label htmlFor=\"companyName\">\n            Company Name\n            <Input name=\"company_name\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"company_name\"\n        defaultValue={\"\"}\n      />\n      <br />\n\n      <Controller\n        as={\n          <select name=\"state\" ref={register}>\n            {states.map((state) => {\n              return (\n                <option key={state.Code} value={state.State}>\n                  {state.State}\n                </option>\n              );\n            })}\n          </select>\n        }\n        control={control}\n        name=\"state\"\n        defaultValue={\"Texas\"}\n      />\n      <br />\n\n      <Controller\n        as={\n          <label htmlFor=\"city\">\n            City\n            <Input name=\"city\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"city\"\n        defaultValue={\"\"}\n      />\n      <br />\n      <br />\n\n      <Controller\n        as={\n          <select name=\"category\" ref={register}>\n            {industries.map((industry) => {\n              return (\n                <option key={industry.name} value={industry.name}>\n                  {industry.name}\n                </option>\n              );\n            })}\n          </select>\n        }\n        control={control}\n        name=\"category\"\n        defaultValue={\"\"}\n      />\n\n      {/* \n\n      <Controller\n        as={\n          <label htmlFor=\"website\">\n            Company Domain Name\n            <Input name=\"website\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"website\"\n        defaultValue={\"\"}\n      />\n      \n      \n      <Controller\n        as={\n          <label htmlFor=\"phone_number\">\n            Phone Number\n            <Input name=\"phone_number\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"phone_number\"\n        defaultValue={\"\"}\n      /> */}\n\n      <Input type=\"submit\" />\n    </form>\n  );\n}\n","import React, {useState,useEffect} from 'react';\nimport {GlobalHeader,GlobalNavigationBar,GlobalNavigationBarRegion,GlobalNavigationBarLink,GlobalHeaderNotifications   ,Popover} from '@salesforce/design-system-react';\n\nconst HeaderNotificationsCustomContent = (props) => (\n  <ul id=\"header-notifications-custom-popover-content\">\n    {props.items.map((item) => (\n      <li\n        className={`slds-global-header__notification ${\n          item.unread ? 'slds-global-header__notification_unread' : ''\n        }`}\n        key={`notification-item-${item.id}`}\n      >\n        <div className=\"slds-media slds-has-flexi-truncate slds-p-around_x-small\">\n          <div className=\"slds-media__figure\">\n            <span className=\"slds-avatar slds-avatar_small\">\n              <img\n                alt={item.name}\n                src={`/assets/images/${item.avatar}.jpg`}\n                title={`${item.name} avatar\"`}\n              />\n            </span>\n          </div>\n          <div className=\"slds-media__body\">\n            <div className=\"slds-grid slds-grid_align-spread\">\n              <a\n                href=\"javascript:void(0);\"\n                className=\"slds-text-link_reset slds-has-flexi-truncate\"\n              >\n                <h3\n                  className=\"slds-truncate\"\n                  title={`${item.name} ${item.action}`}\n                >\n                  <strong>{`${item.name} ${item.action}`}</strong>\n                </h3>\n                <p className=\"slds-truncate\" title={item.comment}>\n                  {item.comment}\n                </p>\n                <p className=\"slds-m-top_x-small slds-text-color_weak\">\n                  {item.timePosted}{' '}\n                  {item.unread ? (\n                    <abbr\n                      className=\"slds-text-link slds-m-horizontal_xxx-small\"\n                      title=\"unread\"\n                    >\n                      ●\n                    </abbr>\n                  ) : null}\n                </p>\n              </a>\n            </div>\n          </div>\n        </div>\n      </li>\n    ))}\n  </ul>\n);\nHeaderNotificationsCustomContent.displayName =\n  'HeaderNotificationsCustomContent';\n\nexport function Header() {\n\treturn (\n\t\t<GlobalHeader\n          logoSrc=\"/bba-logo.jpg\"\n          onSkipToContent={() => {\n            console.log('>>> Skip to Content Clicked');\n          }}\n          onSkipToNav={() => {\n            console.log('>>> Skip to Nav Clicked');\n          }}\n        ><GlobalHeaderNotifications\n            notificationCount={5}\n            popover={\n              <Popover\n                ariaLabelledby=\"header-notifications-custom-popover-content\"\n                body={\n                  <HeaderNotificationsCustomContent\n                    items={[\n                      {\n                        action: 'mentioned you',\n                        avatar: 'avatar2',\n                        comment:\n                          '@jrogers Could I please have a review on my presentation deck',\n                        id: 1,\n                        name: 'Val Handerly',\n                        timePosted: '10 hours ago',\n                        unread: true,\n                      },\n                      {\n                        action: 'commented on your post',\n                        avatar: 'avatar3',\n                        comment: 'I totally agree with your sentiment',\n                        id: 2,\n                        name: 'Jon Rogers',\n                        timePosted: '13 hours ago',\n                        unread: true,\n                      },\n                      {\n                        action: 'mentioned you',\n                        avatar: 'avatar2',\n                        comment:\n                          \"@jrogers Here's the conversation I mentioned to you\",\n                        id: 3,\n                        name: 'Rebecca Stone',\n                        timePosted: '1 day ago',\n                      },\n                    ]}\n                  />\n                }\n                id=\"header-notifications-popover-id\"\n              />\n            }\n          />\n\n        </GlobalHeader>\n\t)\n}","import React, {useState,useEffect} from 'react';\nimport {\n  GlobalHeader,\n  GlobalNavigationBar,\n  GlobalNavigationBarRegion,\n  GlobalNavigationBarLink,\n  GlobalHeaderNotifications,\n  AppLauncher,\n  AppLauncherExpandableSection,\n  AppLauncherTile,\n  Button,\n  Icon} from '@salesforce/design-system-react';\n\n  import { useHistory,BrowserRouter as Router, Route, useLocation } from \"react-router-dom\";\n\nexport function NavBar() {\n\tconst history = useHistory();\n\tconst [currentLocation, setCurrentLocation] = useState(\"\");\n\tlet location = useLocation();\n\n\tuseEffect( () => {\n\t\tsetCurrentLocation(location.pathname);\n\t},[location])\n\n\tfunction handleNav(path) {\n\t\thistory.push(path);\n\t}\n\treturn (\n\t\t<GlobalNavigationBar>\n\t\t<GlobalNavigationBarRegion region=\"primary\">\n\t\t\t<AppLauncher\n\t\t\t\tid=\"app-launcher-trigger\"\n\t\t\t\ttriggerName=\"Sales\"\n\t\t\t\tonSearch={(e) => {\n\t\t\t\t\tconsole.log('Search term:', e.target.value);\n\t\t\t\t}}\n\t\t\t\tmodalHeaderButton={<Button label=\"Get Help\" />}\n\t\t\t>\n\t\t\t\t<AppLauncherExpandableSection title=\"Project Management\">\n\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\ttitle=\"Current Projects\"\n\t\t\t\t\t\ticonText=\"MC\"\n\t\t\t\t\t\tdescription=\"Check current progress status reports\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\ttitle=\"Upcoming Projects\"\n\t\t\t\t\t\tdescription=\"View the incoming projects from sales.\"\n\t\t\t\t\t\ticonText=\"UP\"\n\t\t\t\t\t/>\n\t\t\t\t</AppLauncherExpandableSection>\n\t\t\t\t<AppLauncherExpandableSection title=\"Sales\">\n\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\ttitle=\"CRM\"\n\t\t\t\t\t\ticonText=\"JB\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\ttitle=\"Opportunity Pipeline\"\n\t\t\t\t\t\ticonNode={\n\t\t\t\t\t\t\t<Icon name=\"campaign\" category=\"standard\" size=\"large\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\ttitle=\"Sales Reports\"\n\t\t\t\t\t\ticonNode={\n\t\t\t\t\t\t\t<Icon name=\"campaign\" category=\"standard\" size=\"large\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t</AppLauncherExpandableSection>\n\t\t\t\t<AppLauncherExpandableSection title=\"Technician Communication\">\n\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\ttitle=\"Issue Tracking\"\n\t\t\t\t\t\ticonText=\"JB\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\ttitle=\"Availability\"\n\t\t\t\t\t\ticonNode={\n\t\t\t\t\t\t\t<Icon name=\"campaign\" category=\"standard\" size=\"large\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t</AppLauncherExpandableSection>\n\t\t\t</AppLauncher>\n\t\t</GlobalNavigationBarRegion>\n        <GlobalNavigationBarRegion region=\"secondary\" navigation>\n          <GlobalNavigationBarLink active={currentLocation.includes('companies')} onClick={(path) => handleNav('/companies')} label=\"Companies\" id=\"home-link\" />\n          <GlobalNavigationBarLink active={currentLocation.includes('contacts')} onClick={(path) => handleNav('/contacts')} label=\"Contacts\" />\n          <GlobalNavigationBarLink active={currentLocation.includes('opportunities')} onClick={(path) => handleNav('/opportunities')} label=\"Opportunities\" />\n          <GlobalNavigationBarLink active={currentLocation.includes('projects')} onClick={(path) => handleNav('/reports')} label=\"Projects\" />\n          <GlobalNavigationBarLink active={currentLocation.includes('reportss')} onClick={(path) => handleNav('/reports')} label=\"Reports\" />\n        </GlobalNavigationBarRegion>\n      </GlobalNavigationBar>\n\t)\n}\n","import React, {useState,useEffect} from 'react';\nimport {\n DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter\n } \nfrom '@salesforce/design-system-react'; \nimport { useQuery, gql } from '@apollo/client';\nimport { Link,useHistory,BrowserRouter as Router, Route, useLocation } from \"react-router-dom\";\n\nconst RecordLink = ({children, item, ...props}) => (\n  <DataTableCell title={children} {...props}>\n    <Link to={`/contacts/${item.id}`}>\n      {children}\n    </Link>\n  </DataTableCell>\n)\nRecordLink.displayName = DataTableCell.displayName;\n\nexport function ContactsList(props) {\n\tconst SINGLE = gql`\n\t  query GetContacts($id: ID!) {\n\t    company(id: $id) {\n\t      contacts {\n          id\n\t        contact_name\n\t       company_title\n        }\n\t    }\n\t  }\n\t`;\n\tconst { loading, error, data } = useQuery(SINGLE, {\n    variables: { id: parseInt(props.company) },\n  });\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\treturn (\n\t\t<IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"ContactCard\"\n        headerActions={\n         (\n            <Button\n              label=\"Add Contacts\"\n              onClick={console.log('Open modal')}\n            />\n          )\n        }\n        filter={\n         (data.company.contacts.length > 0) && (\n            <CardFilter onChange={() => {console.log('Change')}} />\n          )\n        }\n        heading={`Contacts (${data.company.contacts.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          data.company.contacts.length === 0 ? (\n            <CardEmpty heading=\"No Contacts\">\n              <Button label=\"Add Contact\" onClick={() => console.log('Clicked')} />\n            </CardEmpty>\n          ) : null\n        }\n      >\n  \t\t\t<DataTable\n          fixedLayout\n          items={data.company.contacts}\n          id=\"getContacts\"\n          on\n        >\n          <DataTableColumn\n            label=\"Id\"\n            property=\"id\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Contact name\"\n            property=\"contact_name\"\n          >\n            <RecordLink />\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Company title\"\n            property=\"company_title\"\n          >\n\n          </DataTableColumn>\n         \n\n        </DataTable>\n      </Card>\n\t\t</IconSettings>\n\t)\n}","import React, { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport { Input, Modal, Button } from \"@salesforce/design-system-react\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addLocation } from \"../../redux/location/locationActions\";\n\nimport { states } from \"../../utilities/states-list\";\n\nimport { gql, useMutation } from \"@apollo/client\";\n\n// const ADD_CONTACT = gql`\n//   mutation CreateContact($input: ContactInput) {\n//     createContact(input: $input) {\n//       id\n//       first_name\n//     }\n//   }\n// `;\n\nconst companies = [\n  { id: 1, name: \"Company 1\" },\n  { id: 2, name: \"Company 2\" },\n];\n\nexport function AddLocation(props) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selection, setSelection] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset, watch, control } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n    dispatch(addLocation(data));\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={\n          <label htmlFor=\"locationName\">\n            Name\n            <Input name=\"name\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"name\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"address\">\n            Address\n            <Input name=\"address\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"address\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"city\">\n            City\n            <Input name=\"city\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"city\"\n        defaultValue={\"\"}\n      />\n      <br />\n      <Controller\n        as={\n          <select name=\"state\" ref={register}>\n            {states.map((state) => {\n              return (\n                <option key={state.Code} value={state.State}>\n                  {state.State}\n                </option>\n              );\n            })}\n          </select>\n        }\n        control={control}\n        name=\"state\"\n        defaultValue={\"Texas\"}\n      />\n      <br />\n\n      <Controller\n        as={\n          <label htmlFor=\"zip_code\">\n            ZIP Code\n            <Input name=\"zip_code\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"zip_code\"\n        defaultValue={\"\"}\n      />\n\n      <Input type=\"submit\" value=\"Post Location\" />\n    </form>\n  );\n}\n","import { ADD_LOCATION } from \"./locationTypes\";\n\nexport const addLocation = (payload) => {\n  return {\n    type: ADD_LOCATION,\n    payload,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter,\n} from \"@salesforce/design-system-react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport {\n  Link,\n  useHistory,\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { ModalContext } from \"../ModalContext\";\nimport { AddLocation } from \"../locations/ModalAddLocation\";\n\nconst LocationLink = ({ children, item, ...props }) => (\n  <DataTableCell title={children} {...props}>\n    <Link to={`/companies/${props.company}/locations/${item.id}`}>\n      {children}\n    </Link>\n  </DataTableCell>\n);\nLocationLink.displayName = DataTableCell.displayName;\n\nexport function LocationsList(props) {\n  const locations = useSelector((state) => state.locations);\n\n  console.log(locations);\n\n  const { handleModal } = React.useContext(ModalContext);\n\n  const triggerModal = (content, heading) => {\n    handleModal(<AddLocation />, \"Add Location\");\n  };\n\n  const SINGLE = gql`\n    query GetOpportunities($id: ID!) {\n      company(id: $id) {\n        locations {\n          id\n          location_name\n          city\n          state\n          location_code\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(SINGLE, {\n    variables: { id: parseInt(props.company) },\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"ContactCard\"\n        headerActions={\n          <Button label=\"Add Locations\" onClick={() => triggerModal()} />\n        }\n        filter={\n          data.company.locations.length > 0 && (\n            <CardFilter\n              onChange={() => {\n                console.log(\"Change\");\n              }}\n            />\n          )\n        }\n        heading={`Locations (${data.company.locations.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          data.company.locations.length === 0 ? (\n            <CardEmpty heading=\"No Locations\">\n              <Button\n                label=\"Add Location\"\n                // onClick={() => console.log(\"Clicked\")}\n                onClick={() => triggerModal()}\n              />\n            </CardEmpty>\n          ) : null\n        }\n      >\n        <DataTable\n          fixedLayout\n          items={data.company.locations}\n          id=\"getContacts\"\n          on\n        >\n          <DataTableColumn label=\"Id\" property=\"id\"></DataTableColumn>\n          <DataTableColumn label=\"Location Name\" property=\"location_name\">\n            <LocationLink company={props.company} />\n          </DataTableColumn>\n          <DataTableColumn label=\"City\" property=\"city\">\n\n          </DataTableColumn>\n\n          <DataTableColumn label=\"State\" property=\"state\"></DataTableColumn>\n\n          <DataTableColumn\n            label=\"Created at\"\n            property=\"created_at\"\n          ></DataTableColumn>\n        </DataTable>\n      </Card>\n    </IconSettings>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport moment from \"moment\";\n\nimport { Input, Datepicker } from \"@salesforce/design-system-react\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addOpportunity } from \"../../redux/opportunity/opportunityActions\";\n\nfunction OpportunityForm() {\n  const [startDateValue, setStartDateValue] = useState(\"\");\n  const [closeDateValue, setCloseDateValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset, watch, control } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n    dispatch(addOpportunity(data));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={\n          <label htmlFor=\"opportunityName\">\n            Name\n            <Input name=\"opportunity_name\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"opportunity_name\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"opportunityDuration\">\n            Duration\n            <Input name=\"duration\" type=\"number\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"duration\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <Datepicker\n            labels={{\n              label: \"Start Date\",\n            }}\n            onChange={(event, data) => {\n              this.handleChange(event, data);\n\n              if (this.props.action) {\n                const dataAsArray = Object.keys(data).map((key) => data[key]);\n                this.props.action(\"onChange\")(event, data, ...dataAsArray);\n              } else if (console) {\n                console.log(\"onChange\", event, data);\n              }\n            }}\n            onCalendarFocus={(event, data) => {\n              if (this.props.action) {\n                const dataAsArray = Object.keys(data).map((key) => data[key]);\n                this.props.action(\"onCalendarFocus\")(\n                  event,\n                  data,\n                  ...dataAsArray\n                );\n              } else if (console) {\n                console.log(\"onCalendarFocus\", event, data);\n              }\n            }}\n            formatter={(date) => {\n              return date ? moment(date).format(\"M/D/YYYY\") : \"\";\n            }}\n            parser={(dateString) => {\n              return moment(dateString, \"MM-DD-YYYY\").toDate();\n            }}\n            value={startDateValue}\n          />\n        }\n        control={control}\n        name=\"duration\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <Datepicker\n            labels={{\n              label: \"Close Date\",\n            }}\n            onChange={(event, data) => {\n              this.handleChange(event, data);\n\n              if (this.props.action) {\n                const dataAsArray = Object.keys(data).map((key) => data[key]);\n                this.props.action(\"onChange\")(event, data, ...dataAsArray);\n              } else if (console) {\n                console.log(\"onChange\", event, data);\n              }\n            }}\n            onCalendarFocus={(event, data) => {\n              if (this.props.action) {\n                const dataAsArray = Object.keys(data).map((key) => data[key]);\n                this.props.action(\"onCalendarFocus\")(\n                  event,\n                  data,\n                  ...dataAsArray\n                );\n              } else if (console) {\n                console.log(\"onCalendarFocus\", event, data);\n              }\n            }}\n            formatter={(date) => {\n              return date ? moment(date).format(\"M/D/YYYY\") : \"\";\n            }}\n            parser={(dateString) => {\n              return moment(dateString, \"MM-DD-YYYY\").toDate();\n            }}\n            value={closeDateValue}\n          />\n        }\n        control={control}\n        name=\"duration\"\n        defaultValue={\"\"}\n      />\n      <br />\n      <Controller\n        as={\n          <label htmlFor=\"totalAmount\">\n            Amount\n            <Input name=\"total_amount\" type=\"number\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"total_amount\"\n        defaultValue={\"\"}\n      />\n\n      <Input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default OpportunityForm;\n","import { ADD_OPPORTUNITY, DELETE_OPPORTUNITY } from \"./opportunityTypes\";\n\nexport const addOpportunity = (payload) => {\n  return {\n    type: ADD_OPPORTUNITY,\n    payload,\n  };\n};\n\nexport const getOpportunitiesData = () => {\n  return (dispatch) => {\n    //fetch from appollo client\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter,\n} from \"@salesforce/design-system-react\";\nimport { ModalContext } from \"../ModalContext\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport OpportunityForm from \"../opportunities/ModalAddOpportunity\";\nimport { useSelector } from \"react-redux\";\n\nfunction OpportunitiesList(props) {\n  const opportunities = useSelector((state) => state.opportunities);\n\n  console.log(opportunities);\n\n  const { handleModal } = React.useContext(ModalContext);\n\n  const SINGLE = gql`\n\t  query GetLocations {\n\t    getOpportunitiesByCompany(company_id: ${props.company}) {\n\t      id\n        amount\n        stage\n\t    }\n\t  }\n\t`;\n  const { loading, error, data } = useQuery(SINGLE);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const triggerModal = (content, heading) => {\n    handleModal(\n      <OpportunityForm addOpportunity={props.addOpportunity} />,\n      \"Add Opportunity\"\n    );\n  };\n\n  return (\n    <IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"OpportunityCard\"\n        headerActions={\n          <Button label=\"Add Opportunity\" onClick={() => triggerModal()} />\n        }\n        filter={\n          data.getOpportunitiesByCompany.length > 0 && (\n            <CardFilter\n              onChange={() => {\n                console.log(\"Change\");\n              }}\n            />\n          )\n        }\n        heading={`Opportunities (${data.getOpportunitiesByCompany.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          data.getOpportunitiesByCompany.length === 0 ? (\n            <CardEmpty heading=\"No Opportunities\">\n              <Button label=\"Add Opportunity\" onClick={() => triggerModal()} />\n            </CardEmpty>\n          ) : null\n        }\n      >\n        <ul>\n          {data.getOpportunitiesByCompany.map((opportunity) => {\n            return (\n              <li>\n                {opportunity.name} {opportunity.amount} {opportunity.stage}\n              </li>\n            );\n          })}\n        </ul>\n      </Card>\n    </IconSettings>\n  );\n}\n\nexport default OpportunitiesList;\n","import React, {useState,useEffect} from 'react';\nimport {\n DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter\n }\nfrom '@salesforce/design-system-react'; \nimport { useQuery, gql } from '@apollo/client';\n\nexport function ProjectsList(props) {\n\tconst SINGLE = gql`\n    query GetCompanyByID($id: ID!) {\n      company(id: $id) {\n        locations {\n          projects {\n            project_name\n          }\n        }\n      }\n    }\n  `;\n\tconst { loading, error, data } = useQuery(SINGLE, {\n    variables: {id: Number(props.company)}\n  });\n\tif (loading) return <p>Loading...</p>;\n  \tif (error) return <p>Error :(</p>;\n\treturn (\n    <IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"ProjectsCard\"\n        headerActions={\n         (\n            <Button\n              label=\"Add Project\"\n              onClick={console.log('Open modal')}\n            />\n          )\n        }\n        filter={\n         (data.company.locations.length > 0) && (\n            <CardFilter onChange={() => {console.log('Change')}} />\n          )\n        }\n        heading={`Projects (${data.company.locations.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          data.company.locations.length === 0 ? (\n            <CardEmpty heading=\"No Projects\">\n              <Button label=\"Add Project\" onClick={() => console.log('Clicked')} />\n            </CardEmpty>\n          ) : null\n        }\n      >\n  \t\t<DataTable\n            fixedLayout\n            items={data.locations.projects}\n            id=\"getContacts\"\n            on\n          >\n            <DataTableColumn\n              label=\"Id\"\n              property=\"id\"\n            >\n\n            </DataTableColumn>\n          </DataTable>\n    </Card>\n  </IconSettings>\n\t)\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  PageHeader,\n  PageHeaderControl,\n  IconSettings,\n  Icon,\n  Tabs,\n  TabsPanel,\n  ButtonStateful,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  BrandBand,\n  Input,\n  InputIcon,\n} from \"@salesforce/design-system-react\"; \nimport {\n  Link,\n  useHistory,\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\n\nimport { ContactsList } from \"./ContactsList\";\nimport { LocationsList } from \"./LocationsList\";\nimport OpportunitiesList from \"./OpportunitiesList\";\nimport { ProjectsList } from \"./ProjectsList\";\n\nexport function CompanyDetail({ match, props }) {\n  const id = Number(match.params.companyId);\n  const SINGLE = gql`\n    query GetCompanyByID($id: ID!) {\n      company(id: $id) {\n        id\n        company_name\n        state\n        city\n        created_at\n        locations {\n          id\n        }\n      }\n    }\n  `;\n  const UPDATE_COMPANY = gql`\n      mutation UpdateCompany($id: ID!, $input: CompanyUpdate) {\n        updateCompany(where:{id:$id},data:$input){\n          id\n        }\n      }\n    `\n\n  const { loading, error, data } = useQuery(SINGLE, {\n    variables: { id: parseInt(id) },\n  });\n  const [updateCompany, { companyData }] = useMutation(UPDATE_COMPANY);\n\n  const [modalOpen, toggleModalOpen] = useState(false);\n\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data,id) => {\n    console.log('id',match.params.companyId);\n    updateCompany({variables: {id:match.params.companyId, input: data}})\n  };\n  console.log(errors);\n\n  const actions = () => (\n    <React.Fragment>\n      <PageHeaderControl>\n        <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n          <Button label=\"New Contact\" />\n          <Button label=\"New Location\" />\n          <Button label=\"New Opportunity\" />\n          <Dropdown\n            align=\"right\"\n            assistiveText={{ icon: \"More Options\" }}\n            iconCategory=\"utility\"\n            iconName=\"down\"\n            iconVariant=\"border-filled\"\n            id=\"dropdown-record-home-example\"\n            options={[\n              { label: \"Menu Item One\", value: \"A0\" },\n              { label: \"Menu Item Two\", value: \"B0\" },\n              { label: \"Menu Item Three\", value: \"C0\" },\n              { type: \"divider\" },\n              { label: \"Menu Item Four\", value: \"D0\" },\n            ]}\n          />\n        </ButtonGroup>\n      </PageHeaderControl>\n    </React.Fragment>\n  );\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  const details = [\n    {\n      label: \"Website\",\n      content: data.company.website,\n      truncate: true,\n    },\n    { label: \"Created at\", content: data.company.created_at },\n    {\n      label: \"Field 3\",\n      content: <a href=\"javascript:void(0);\">Hyperlink</a>,\n    },\n    {\n      label: \"Field 4\",\n      content: \"Description (2-line truncatencation)\",\n      truncate: true,\n    },\n  ];\n\n  return (\n    <IconSettings iconPath=\"/icons\">\n      <BrandBand\n        id=\"brand-band-lightning-blue\"\n        className=\"slds-p-around_small\"\n        theme=\"lightning-blue\"\n      >\n        <PageHeader\n          details={details}\n          icon={\n            <Icon\n              assistiveText={{ label: \"User\" }}\n              category=\"standard\"\n              name=\"account\"\n            />\n          }\n          label=\"Company\"\n          onRenderActions={actions}\n          title={data.company.company_name}\n          variant=\"record-home\"\n        />\n\n        <div className=\"slds-grid slds-wrap slds-m-top_medium slds-gutters\">\n          <div className=\"slds-col slds-col slds-size_2-of-3\">\n            <Tabs id=\"left\" className=\"slds-var-p-around_small\">\n              <TabsPanel label=\"Details\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <Input\n                    iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: \"Edit\",\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    }\n                    type=\"text\"\n                    defaultValue={data.company.company_name}\n                    placeholder=\"Company name\"\n                    name=\"company_name\"\n                    label=\"Company name\"\n                    ref={register}\n                  />\n                  <Input\n                    iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: \"Edit\",\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    }\n                    type=\"text\"\n                    defaultValue={data.company.city}\n                    placeholder=\"City\"\n                    name=\"city\"\n                    label=\"City\"\n                    ref={register}\n                  />\n                  <Input\n                    iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: \"Edit\",\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    }\n                    type=\"text\"\n                    defaultValue={data.company.state}\n                    placeholder=\"State\"\n                    name=\"state\"\n                    label=\"State\"\n                    ref={register}\n                  />\n\n                  <Button onClick={handleSubmit(onSubmit)} type=\"submit\">\n                    Update\n                  </Button>\n                </form>\n              </TabsPanel>\n              <TabsPanel label=\"Contacts\">\n                <ContactsList company={data.company.id} />\n              </TabsPanel>\n              <TabsPanel label=\"Locations\">\n                <LocationsList company={data.company.id} />\n              </TabsPanel>\n              <TabsPanel label=\"Projects\">\n                <ProjectsList company={data.company.id} />\n              </TabsPanel>\n            </Tabs>\n          </div>\n          <div className=\"slds-col slds-col slds-size_1-of-3\">\n            <Tabs id=\"right\" className=\"slds-var-p-around_small\">\n              <TabsPanel label=\"Opportunities\">\n                <OpportunitiesList company={data.company.id} />\n              </TabsPanel>\n            </Tabs>\n          </div>\n        </div>\n      </BrandBand>\n    </IconSettings>\n  );\n}\n","import React, {useState,useEffect} from 'react';\nimport {\n DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter\n } \nfrom '@salesforce/design-system-react'; \nimport { useQuery, gql } from '@apollo/client';\n\n\n\nexport function ContactsList(props) {\n\tconst SINGLE = gql`\n\t  query GetContacts {\n\t    getContactsByLocation(location_id: ${props.location}) {\n\t      id\n\t      first_name\n\t      last_name\n        email\n\t    }\n\t  }\n\t`;\n\tconst { loading, error, data } = useQuery(SINGLE);\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\treturn (\n\t\t<IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"ContactCard\"\n        headerActions={\n         (\n            <Button\n              label=\"Add Contacts\"\n              onClick={console.log('Open modal')}\n            />\n          )\n        }\n        filter={\n         (data.getContactsByLocation.length > 0) && (\n            <CardFilter onChange={() => {console.log('Change')}} />\n          )\n        }\n        heading={`Contacts (${data.getContactsByLocation.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          data.getContactsByLocation.length === 0 ? (\n            <CardEmpty heading=\"No Contacts\">\n              <Button label=\"Add Contact\" onClick={() => console.log('Clicked')} />\n            </CardEmpty>\n          ) : null\n        }\n      >\n  \t\t\t<DataTable\n          fixedLayout\n          items={data.getContactsByLocation}\n          id=\"getContacts\"\n          on\n        >\n          <DataTableColumn\n            label=\"Id\"\n            property=\"id\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"First name\"\n            property=\"first_name\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Last name\"\n            property=\"last_name\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Email\"\n            property=\"email\"\n          >\n\n          </DataTableColumn>\n\n        </DataTable>\n      </Card>\n\t\t</IconSettings>\n\t)\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter,\n} from \"@salesforce/design-system-react\";\n\nimport { useQuery, gql } from '@apollo/client';\nimport { Link,useHistory,BrowserRouter as Router, Route, useLocation } from \"react-router-dom\";\n\nexport function OpportunitiesList(props) {\n  const SINGLE = gql`\n\t  query GetLocations {\n\t    getOpportunitiesByLocation(location_id: ${props.location}) {\n\t      id\n        amount\n        stage\n\t    }\n\t  }\n\t`;\n  const { loading, error, data } = useQuery(SINGLE);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"OpportunityCard\"\n        headerActions={\n          <Button\n            label=\"Add Opportunity\"\n            onClick={console.log(\"i will Open modal\")}\n          />\n        }\n        filter={\n          data.getOpportunitiesByLocation.length > 0 && (\n            <CardFilter\n              onChange={() => {\n                console.log(\"Change\");\n              }}\n            />\n          )\n        }\n        heading={`Opportunities (${data.getOpportunitiesByLocation.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          data.getOpportunitiesByLocation.length === 0 ? (\n            <CardEmpty heading=\"No Opportunities\">\n              <Button\n                label=\"Add Opportunity\"\n                onClick={() => console.log(\"Clicked\")}\n              />\n            </CardEmpty>\n          ) : null\n        }\n      >\n\t\t<ul>\n\t\t\t{\n        data.getOpportunitiesByLocation.map(opportunity => {\n          return (\n            <li><Link to={`/companies/${props.company}/opportunities/${opportunity.id}`}>{opportunity.name} {opportunity.amount} {opportunity.stage} </Link></li>\n          )\n        }) \n      }\n\t\t</ul>\n    </Card>\n  </IconSettings>\n\t)\n}\n","import React, {useState,useEffect} from 'react';\nimport {\n DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter\n } \nfrom '@salesforce/design-system-react'; \nimport { useQuery, gql } from '@apollo/client';\n\nexport function EquipmentList(props) {\n\tconst SINGLE = gql`\n\t  query GetEquipment {\n\t    getEquipmentByLocation(location_id: ${props.location}) {\n\t      id\n\t      make \n        model\n        created_at\n        updated_at\n        cfm\n        data {\n          id\n        }\n\t    }\n\t  }\n\t`;\n\n  const [equipment,setEquipment] = useState([]);\n\tconst { loading, error, data } = useQuery(SINGLE);\n\n  useEffect(() => {\n    setEquipment(props.equipment)\n  }, [props.equipment])\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\n  \n  const single = data.getEquipmentByLocation;\n\n\treturn (\n\t\t<IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"EquipmentCard\"\n        headerActions={\n         (\n            <Button\n              label=\"Add Equipment\"\n              onClick={console.log('Open modal')}\n            />\n          )\n        }\n        filter={\n         (equipment.length > 0) && (\n            <CardFilter onChange={() => {console.log('Change')}} />\n          )\n        }\n        heading={`Equipment (${equipment.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          equipment.length === 0 ? (\n            <CardEmpty heading=\"No Equipment\">\n              <Button label=\"Add Equipment\" onClick={() => console.log('Clicked')} />\n            </CardEmpty>\n          ) : null\n        }\n      >\n  \t\t\t<DataTable\n          fixedLayout\n          items={equipment}\n          id=\"getEquipment\"\n          on\n        >\n          <DataTableColumn\n            label=\"Building code\"\n            property=\"building_code\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"System name\"\n            property=\"system_name\"\n          >\n\n          </DataTableColumn>\n\n          <DataTableColumn\n            label=\"CFM\"\n            property=\"cfm\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Water\"\n            property=\"water\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Power\"\n            property=\"power\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Size\"\n            property=\"size\"\n          >\n\n          </DataTableColumn>\n\n        </DataTable>\n      </Card>\n\t\t</IconSettings>\n\t)\n}","import React, {useState,useEffect} from 'react';\nimport {\n DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  IconSettings,\n  CardFilter\n } \nfrom '@salesforce/design-system-react'; \nimport { useQuery, gql } from '@apollo/client';\n\n\n\nexport function ProjectsList(props) {\n\tconst SINGLE = gql`\n\t  query GetProjects {\n\t    getProjectsByLocation(location_id: ${props.location}) {\n\t      id\n        created_at\n        start_date\n        kickoff_call\n        technicians {\n          id\n        }\n\t    }\n\t  }\n\t`;\n\tconst { loading, error, data } = useQuery(SINGLE);\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\n  const single = data.getProjectsByLocation;\n\n\treturn (\n\t\t<IconSettings iconPath=\"/icons\">\n      <Card\n        id=\"ProjectCard\"\n        headerActions={\n         (\n            <Button\n              label=\"Add Project\"\n              onClick={console.log('Open modal')}\n            />\n          )\n        }\n        filter={\n         (single.length > 0) && (\n            <CardFilter onChange={() => {console.log('Change')}} />\n          )\n        }\n        heading={`Projects (${single.length})`}\n        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n        empty={\n          single.length === 0 ? (\n            <CardEmpty heading=\"No Projects\">\n              <Button label=\"Add Project\" onClick={() => console.log('Clicked')} />\n            </CardEmpty>\n          ) : null\n        }\n      >\n  \t\t\t<DataTable\n          fixedLayout\n          items={single}\n          id=\"getProject\"\n          on\n        >\n          <DataTableColumn\n            label=\"Id\"\n            property=\"id\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Start date\"\n            property=\"start_date\"\n          >\n\n          </DataTableColumn>\n          <DataTableColumn\n            label=\"Kickoff call\"\n            property=\"kickoff_call\"\n          >\n\n          </DataTableColumn>\n\n        </DataTable>\n      </Card>\n\t\t</IconSettings>\n\t)\n}","export const ADD_EQUIPMENT = \"ADD_EQUIPMENT\";\n\n//Add more typed here\n//export const DELETE_OPPORTUNITY = \"DELETE_OPPORTUNITY\";\n","import { ADD_EQUIPMENT } from \"./equipmentTypes\";\n\nexport const addEquipment = (payload) => {\n  return {\n    type: ADD_EQUIPMENT,\n    payload,\n  };\n};\n\n//Add more action creators here\n\n// export const deleteOpportunity = () => {\n//   return {\n//     type: DELETE_OPPORTUNITY,\n//   };\n// };\n","import React, {useState,useEffect} from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { useForm } from 'react-hook-form';\nimport {\n  PageHeader,\n  PageHeaderControl,\n  IconSettings,\n  Icon,\n  Tabs,\n  TabsPanel,\n  ButtonStateful,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  BrandBand,\n  Input,\n  InputIcon\n} \nfrom '@salesforce/design-system-react'; \nimport { Link,useHistory,BrowserRouter as Router, Route, useLocation } from \"react-router-dom\";\nimport { FlatfileButton } from \"@flatfile/react\";\n\nimport {ContactsList} from './ContactsList';\nimport {OpportunitiesList} from './OpportunitiesList';\nimport {EquipmentList} from './EquipmentList';\nimport {ProjectsList} from './ProjectsList';\n\nimport { addEquipment } from \"../../redux/equipment/equipmentActions\";\nimport { connect } from \"react-redux\";\n\nfunction LocationDetail({match,props}) {\n  const SINGLE = gql`\n    query locationById($location_id: ID!,$company_id: ID!) {\n      location(id: $location_id) {\n        id\n        city\n        state\n        address\n        location_name\n      }\n      company(id: $company_id) {\n        id\n        company_name\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(SINGLE, {\n    variables: { location_id: parseInt(match.params.locationId),company_id: parseInt(match.params.companyId) },\n  });\n\n  const [modalOpen,toggleModalOpen] = useState(false);\n\n  const [equipment, setEquipment] = useState([]);\n\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => console.log(data);\n\n  const actions = () => (\n      <React.Fragment>\n        <PageHeaderControl>\n          <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n            \n            <FlatfileButton\n                  licenseKey=\"e335c423-3909-4363-accf-88c0cd05947f\"\n                  customer={{ userId: \"12345\" }}\n                  settings={{\n                    type: \"Equipment\",\n                    fields: [\n                      { label: \"Building Code\", key: \"building_code\" },\n                      { label: \"System name\", key: \"system_name\" },\n                      { label: \"Building\", key: \"building\" },\n                      { label: \"CFM\", key: \"cfm\" },\n                      { label: \"Size\", key: \"size\" },\n                      { label: \"Water\", key: \"water\", type: 'checkbox'},\n                      { label: \"Power\", key: \"power\", type: 'checkbox' }\n                    ]\n                  }}\n                  onData={async (results) => {\n                    // do something with the results\n                    let arr = [];\n\n                    results.data.map(obj => {\n\n                      let cfm = obj.cfm.replace(/,/g, '');\n\n                      let newObj = {\n                        building_code: obj.building_code,\n                        system_name: obj.system_name,\n                        cfm: parseInt(cfm),\n                        size: obj.size,\n                        water: obj.water,\n                        power: obj.power,\n                        location_id: parseInt(match.params.locationId)\n                      };\n                      arr.push(newObj);\n                    })\n                    addEquipment(arr);\n                    setEquipment(arr);\n                    return \"Done!\";\n                  }}\n                  render={(importer, launch) => {\n                    return <Button onClick={launch} label=\"Upload Equipment List\" />;\n                  }}\n              >\n              </FlatfileButton>\n            <Button label=\"New Opportunity\" />\n          </ButtonGroup>\n        </PageHeaderControl>\n      </React.Fragment>\n    );\n\n  \n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n    const details = [\n      {\n        label: 'Address',\n        content: <p>{data.location.address}<br/>{data.location.city}, {data.location.state} 75201</p>\n      },\n      { label: 'Company', content: <Link to={`/companies/${data.company.id}`}>{data.company.company_name}</Link>},\n      {\n        label: 'Primary contact',\n        content: <a href=\"\">Jon Smith</a>,\n        truncate: true,\n      },\n      {\n        label: 'Created at',\n        content: new Date().getTime(),\n        truncate: true,\n      },\n    ];\n\n  return (\n\n    <IconSettings iconPath=\"/icons\">\n      <BrandBand\n          id=\"brand-band-lightning-blue\"\n          className=\"slds-p-around_small\"\n          theme=\"lightning-blue\"\n        >\n        <PageHeader\n          details={details}\n          icon={\n            <Icon\n              assistiveText={{ label: 'Location' }}\n              category=\"standard\"\n              name=\"account\"\n            />\n          }\n          label={`Location ID ${data.location.id}`}\n          onRenderActions={actions}\n          title={data.location.name}\n          variant=\"record-home\"\n        />\n\n        <div className=\"slds-grid slds-wrap slds-m-top_medium slds-gutters\">\n            <div className=\"slds-col slds-col slds-size_2-of-3\">\n              <Tabs id=\"left\" className=\"slds-var-p-around_small\">\n                <TabsPanel label=\"Details\">\n                  <form onSubmit={handleSubmit(onSubmit)}>\n                    <Input iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: 'Edit',\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    } \n                    type=\"text\" defaultValue={data.location.name} placeholder=\"Location name\" name=\"name\" label=\"Location name\" ref={register} />\n                    <Input iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: 'Edit',\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    } type=\"text\" defaultValue={data.location.phone_number} placeholder=\"Phone number\" name=\"phone_number\" label=\"Phone number\" ref={register} />\n                    <Input iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: 'Edit',\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    } type=\"text\" defaultValue={data.location.website} placeholder=\"Website\" name=\"website\" label=\"Website\" ref={register} />\n\n                    <Button onClick={handleSubmit(onSubmit)} type=\"submit\">Update</Button>\n                  </form>\n                  \n                </TabsPanel>\n              <TabsPanel label=\"Contacts\">\n                <ContactsList location={data.location.id} />\n              </TabsPanel>\n              <TabsPanel label=\"Equipment\">\n                <EquipmentList location={data.location.id} equipment={equipment} />\n              </TabsPanel>\n              <TabsPanel label=\"Projects\">\n                <ProjectsList location={data.location.id} />\n              </TabsPanel>\n              </Tabs>\n            </div>\n            <div className=\"slds-col slds-col slds-size_1-of-3\">\n                <Tabs id=\"right\" className=\"slds-var-p-around_small\">\n                  <TabsPanel label=\"Opportunities\">\n                    <OpportunitiesList company={data.company.id} location={data.location.id} />\n                  </TabsPanel>\n                </Tabs>\n            </div>\n        </div>\n      </BrandBand>\n      </IconSettings>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addEquipment: (array) => dispatch(addEquipment(array)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LocationDetail);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  DataTable,\n  DataTableColumn,\n  DataTableCell,\n  BrandBand,\n  PageHeaderControl,\n  PageHeader,\n  Input,\n  Button,\n  DropdownTrigger,\n  ButtonGroup,\n  Dropdown,\n  Icon,\n  IconSettings,\n  Modal,\n} from \"@salesforce/design-system-react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { CompanyForm } from \"./ModalAddCompanyForm\";\nimport {\n  Link,\n  useHistory,\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport { ModalContext } from \"../ModalContext\";\nimport { useSelector } from \"react-redux\";\n\nconst COMPANIES = gql`\n  query GetCompanies {\n    companies {\n      id\n      company_name\n      city\n      state\n      category\n      contacts {\n        id\n      }\n      locations {\n        id\n      }\n      created_at\n    }\n  }\n`;\n\nconst CompanyLink = ({ children, item, ...props }) => (\n  <DataTableCell title={children} {...props}>\n    <Link to={`/companies/${item.id}`}>{children}</Link>\n  </DataTableCell>\n);\nCompanyLink.displayName = DataTableCell.displayName;\n\nconst LocationCell = ({ children, item, ...props }) => (\n  <DataTableCell {...props}>\n    <a href=\"javascript:void(0);\">{item.locations.length}</a>\n  </DataTableCell>\n);\nLocationCell.displayName = DataTableCell.displayName;\n\nexport function CompaniesList(props) {\n  const user = useSelector((state) => state.user);\n\n  console.log(user);\n\n  const { handleModal } = React.useContext(ModalContext);\n  const { loading, error, data } = useQuery(COMPANIES);\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"triggered\", data);\n      setItems(data.companies);\n    }\n  }, [loading]);\n  const triggerModal = (content, heading) => {\n    handleModal(<CompanyForm auth={user} />, \"Add Company\");\n  };\n\n  const filterTable = (input) => {\n    setItems(\n      data.companies.filter((item) =>\n        item.company_name.toLowerCase().includes(input.toLowerCase())\n      )\n    );\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  console.log(data);\n\n  const actions = () => (\n    <PageHeaderControl>\n      <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n        <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n          <Button\n            variant=\"brand\"\n            label=\"Add Company\"\n            onClick={() => triggerModal()}\n          />\n        </ButtonGroup>\n      </ButtonGroup>\n    </PageHeaderControl>\n  );\n\n  const controls = () => (\n    <React.Fragment>\n      <PageHeaderControl>\n        <Input\n          placeholder=\"Search companies\"\n          type=\"text\"\n          onInput={(e) => filterTable(e.target.value)}\n        />\n      </PageHeaderControl>\n      <PageHeaderControl>\n        <Dropdown\n          align=\"right\"\n          id=\"page-header-dropdown-object-home-content-right\"\n          options={[\n            { label: \"Menu Item One\", value: \"A0\" },\n            { label: \"Menu Item Two\", value: \"B0\" },\n            { label: \"Menu Item Three\", value: \"C0\" },\n            { type: \"divider\" },\n            { label: \"Menu Item Four\", value: \"D0\" },\n          ]}\n        >\n          <DropdownTrigger>\n            <Button\n              assistiveText={{ icon: \"List View Controls\" }}\n              iconCategory=\"utility\"\n              iconName=\"settings\"\n              iconVariant=\"more\"\n            />\n          </DropdownTrigger>\n        </Dropdown>\n      </PageHeaderControl>\n    </React.Fragment>\n  );\n\n  return (\n    <IconSettings iconPath=\"/icons\">\n      <BrandBand\n        id=\"brand-band-lightning-blue\"\n        className=\"slds-p-around_small\"\n        theme=\"lightning-blue\"\n      >\n        <PageHeader\n          icon={\n            <Icon\n              assistiveText={{ label: \"User\" }}\n              category=\"standard\"\n              name=\"opportunity\"\n            />\n          }\n          label=\"COMPANY\"\n          title={`Your companies`}\n          variant=\"object-home\"\n          info={`${items.length} companies • Updated 13 minutes ago`}\n          onRenderActions={actions}\n          onRenderControls={controls}\n        />\n        <DataTable fixedLayout items={items} id=\"getCompanies\" on>\n          <DataTableColumn label=\"Id\" property=\"id\"></DataTableColumn>\n          <DataTableColumn label=\"Company name\" property=\"company_name\">\n            <CompanyLink />\n          </DataTableColumn>\n          <DataTableColumn label=\"Website\" property=\"website\"></DataTableColumn>\n          <DataTableColumn\n            label=\"Created at\"\n            property=\"created_at\"\n          ></DataTableColumn>\n          <DataTableColumn\n            label=\"Phone number\"\n            property=\"phone_number\"\n          ></DataTableColumn>\n          <DataTableColumn label=\"Locations\">\n            <LocationCell locations={items.locations} />\n          </DataTableColumn>\n\n          <DataTableColumn label=\"Opportunities\"></DataTableColumn>\n\n          <DataTableColumn label=\"Value\"></DataTableColumn>\n\n          <DataTableColumn label=\"Projects\">\n            <LocationCell />\n          </DataTableColumn>\n        </DataTable>\n      </BrandBand>\n    </IconSettings>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport { Input, Modal, Button } from \"@salesforce/design-system-react\";\n\nimport { gql, useMutation } from \"@apollo/client\";\n\n// const ADD_CONTACT = gql`\n//   mutation CreateContact($input: ContactInput) {\n//     createContact(input: $input) {\n//       id\n//       first_name\n//     }\n//   }\n// `;\n\nexport function AddContactForm(props) {\n  // const [addContact, { data, error }] = useMutation(ADD_CONTACT);\n\n  const { register, handleSubmit, reset, watch, control } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={\n          <label htmlFor=\"firstName\">\n            First Name\n            <Input name=\"first_name\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"first_name\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"secondName\">\n            Second Name\n            <Input name=\"second_name\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"second_name\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"emailAddress\">\n            Email Address\n            <Input name=\"email_address\" type=\"email\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"email_address\"\n        defaultValue={\"\"}\n      />\n\n      <Controller\n        as={\n          <label htmlFor=\"phoneNumber\">\n            Phone Number\n            <Input name=\"phone_number\" type=\"text\" ref={register} />\n          </label>\n        }\n        control={control}\n        name=\"phone_number\"\n        defaultValue={\"\"}\n      />\n      <br />\n\n      <Input type=\"submit\" value=\"Post Contact\" />\n    </form>\n  );\n}\n","import React, {useState,useEffect} from 'react';\nimport {\n DataTable,\n  DataTableColumn,\n  DataTableCell,\n  BrandBand,\n  PageHeaderControl,\n  PageHeader,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  Icon,\n  IconSettings,\n  Modal} \nfrom '@salesforce/design-system-react'; \nimport { useQuery, gql } from '@apollo/client';\n\nimport { ModalContext } from \"../ModalContext\";\nimport {AddContactForm} from './ModalAddContact';\nimport { Link,useHistory,BrowserRouter as Router, Route, useLocation } from \"react-router-dom\";\n\nconst RecordLink = ({children, item, ...props}) => (\n  <DataTableCell title={children} {...props}>\n    <Link to={`/contacts/${item.id}`}>\n      {children}\n    </Link>\n  </DataTableCell>\n)\nRecordLink.displayName = DataTableCell.displayName;\n\nconst CONTACTS = gql`\n  {\n    contacts {\n      id\n      contact_name\n      company_title\n    }\n  }\n`;\n\nexport function ContactsList(props) {\n  const { loading, error, data } = useQuery(CONTACTS);\n  const { handleModal } = React.useContext(ModalContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  function toggleModal() {\n    handleModal(<AddContactForm />,'Add Contact')\n  }\n\n  const actions = () => (\n    <PageHeaderControl>\n      <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n        <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n          <Button variant=\"brand\" label=\"Add Contact\" onClick={toggleModal}/>\n        </ButtonGroup>\n      </ButtonGroup>\n    </PageHeaderControl>\n  );\n\n\n  return (\n    <IconSettings iconPath=\"/icons\">\n      <BrandBand\n          id=\"brand-band-lightning-blue\"\n          className=\"slds-p-around_small\"\n          theme=\"lightning-blue\"\n        >\n      <PageHeader\n        icon={\n          <Icon\n            assistiveText={{ label: 'User' }}\n            category=\"standard\"\n            name=\"opportunity\"\n          />\n        }\n        label=\"CONTACTS\"\n        title={`Your contacts`}\n        variant=\"record-home\"\n        onRenderActions={actions}\n      />\n      <DataTable\n            fixedLayout\n            items={data.contacts}\n            id=\"getContacts\"\n            selectRows=\"checkbox\"\n          >\n            <DataTableColumn\n              label=\"Id\"\n              property=\"id\"\n            >\n\n            </DataTableColumn>\n            <DataTableColumn\n              label=\"Contact name\"\n              property=\"contact_name\"\n            >\n              <RecordLink />\n\n            </DataTableColumn>\n            <DataTableColumn\n              label=\"Title\"\n              property=\"company_title\"\n            >\n\n            </DataTableColumn>\n        </DataTable>\n      </BrandBand>\n  </IconSettings>\n  )\n}","import React,{useState} from 'react';\n\nexport function ActivityItem(props) {\n\tconst [title, setTitle] = useState(props.title);\n\tconst [date, setDate] = useState(props.date);\n\tconst [activity, setActivity] = useState(props.activity);\n\tconst [link, setLink] = useState(props.link);\n\tconst [actor, setActor] = useState(props.actor);\n\treturn (\n\t\t<div className=\"slds-timeline__item_expandable slds-timeline__item_task\">\n\t      <span className=\"slds-assistive-text\">task</span>\n\t      <div className=\"slds-media\">\n\t        <div className=\"slds-media__figure\">\n\t          <button className=\"slds-button slds-button_icon\" aria-controls=\"task-item-base\">\n\t            \n\t            <span className=\"slds-assistive-text\">Contact was created by Steve Nash</span>\n\t          </button>\n\t          \n\t         </div>\n\t        <div className=\"slds-media__body\">\n\t          <div className=\"slds-grid slds-grid_align-spread slds-timeline__trigger\">\n\t            <div className=\"slds-grid slds-grid_vertical-align-center slds-truncate_container_75 slds-no-space\">\n\t              \n\t              <h3 className=\"slds-truncate\" title=\"Review proposals for EBC deck with larger team and have marketing review this\">\n\t                <a href=\"javascript:void(0);\">\n\t                  <strong>{title}</strong>\n\t                </a>\n\t              </h3>\n\t              <div className=\"slds-no-flex\">\n\t                <span className=\"slds-icon_container slds-icon-utility-rotate\" title=\"Recurring Task\">\n\t                  \n\t                  <span className=\"slds-assistive-text\">Recurring Task</span>\n\t                </span>\n\t              </div>\n\t            </div>\n\t            <div className=\"slds-timeline__actions slds-timeline__actions_inline\">\n\t              <p className=\"slds-timeline__date\">{date}</p>\n\t            </div>\n\t          </div>\n\t          <p className=\"slds-m-horizontal_xx-small\">\n\t            <a href=\"javascript:void(0);\">{actor}</a> {activity}\n\t          </p>\n\t          <article className=\"slds-box slds-timeline__item_details slds-theme_shade slds-m-top_x-small slds-m-horizontal_xx-small\" id=\"task-item-base\" aria-hidden=\"true\">\n\t            <ul className=\"slds-list_horizontal slds-wrap\">\n\t              <li className=\"slds-grid slds-grid_vertical slds-size_1-of-2 slds-p-bottom_small\">\n\t                <span className=\"slds-text-title slds-p-bottom_x-small\">Name</span>\n\t                <span className=\"slds-text-body_medium slds-truncate\" title=\"Charlie Gomez\">\n\t                  <a href=\"javascript:void(0);\">Charlie Gomez</a>\n\t                </span>\n\t              </li>\n\t              <li className=\"slds-grid slds-grid_vertical slds-size_1-of-2 slds-p-bottom_small\">\n\t                <span className=\"slds-text-title slds-p-bottom_x-small\">Related To</span>\n\t                <span className=\"slds-text-body_medium slds-truncate\" title=\"Tesla Cloudhub + Anypoint Connectors\">\n\t                  <a href=\"javascript:void(0);\">Tesla Cloudhub + Anypoint Connectors</a>\n\t                </span>\n\t              </li>\n\t            </ul>\n\t            <div>\n\t              <span className=\"slds-text-title\">Description</span>\n\t              <p className=\"slds-p-top_x-small\">Need to finalize proposals and brand details before the meeting</p>\n\t            </div>\n\t          </article>\n\t        </div>\n\t      </div>\n\t    </div>\n\t)\n}","import React from 'react';\nimport {ActivityItem} from './ActivityItem';\n\nexport function ActivityTab() {\n\treturn (\n\t\t<ul className=\"slds-timeline\">\n\t\t  <li>\n\t\t  \t<ActivityItem title={\"Contact signed proposal\"} date={new Date().getTime()} actor={\"Go to next steps\"} />\n\t\t    <ActivityItem title={\"Contact opened proposal\"} date={new Date().getTime()} actor={\"Proposal 1234\"} />\n\t\t   \t<ActivityItem title={\"Contact sent proposal\"} date={new Date().getTime()} activity={\"sent the proposal\"} actor={\"Steve Nash\"} />\n\t\t   \t<ActivityItem title={\"Contact created\"} date={new Date().getTime()} activity={\"created the contact\"} actor={\"Steve Nash\"} />\n\t\t   </li>\n\t\t</ul>\n\t)\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  PageHeader,\n  PageHeaderControl,\n  IconSettings,\n  Icon,\n  Tabs,\n  TabsPanel,\n  ButtonStateful,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  BrandBand,\n  Input,\n  InputIcon,\n} from \"@salesforce/design-system-react\";\n\nimport {\n  Link,\n  useHistory,\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\n\nimport {ActivityTab} from './ActivityTab';\n\nexport function ContactDetail({ match, props }) {\n  const SINGLE = gql`\n    query contactByID($id: ID!) {\n      contact(id: $id) {\n        id\n        contact_name\n        company_title\n        created_at\n        company {\n          id\n          company_name\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(SINGLE, {\n    variables: {id: match.params.contactId}\n  });\n\n  const [modalOpen, toggleModalOpen] = useState(false);\n\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  const actions = () => (\n    <React.Fragment>\n      <PageHeaderControl>\n        <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n          <Button label=\"Assign to Location\" />\n          <Dropdown\n            align=\"right\"\n            assistiveText={{ icon: \"More Options\" }}\n            iconCategory=\"utility\"\n            iconName=\"down\"\n            iconVariant=\"border-filled\"\n            id=\"dropdown-record-home-example\"\n            options={[\n              { label: \"Menu Item One\", value: \"A0\" },\n              { label: \"Menu Item Two\", value: \"B0\" },\n              { label: \"Menu Item Three\", value: \"C0\" },\n              { type: \"divider\" },\n              { label: \"Menu Item Four\", value: \"D0\" },\n            ]}\n          />\n        </ButtonGroup>\n      </PageHeaderControl>\n    </React.Fragment>\n  );\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const details = [\n    {\n      label: \"Company\",\n      content: <Link to={`/companies/1544`}>Bridge</Link>,\n      truncate: true,\n    },\n    { label: \"Created at\", content: data.contact.created_at },\n    {\n      label: \"Field 3\",\n      content: <a href=\"javascript:void(0);\">Hyperlink</a>,\n    },\n    {\n      label: \"Field 4\",\n      content: \"Description (2-line truncatencation)\",\n      truncate: true,\n    },\n  ];\n\n  return (\n    <IconSettings iconPath=\"/icons\">\n      <BrandBand\n        id=\"brand-band-lightning-blue\"\n        className=\"slds-p-around_small\"\n        theme=\"lightning-blue\"\n      >\n        <PageHeader\n          details={details}\n          icon={\n            <Icon\n              assistiveText={{ label: \"User\" }}\n              category=\"standard\"\n              name=\"account\"\n            />\n          }\n          label=\"Company\"\n          onRenderActions={actions}\n          title={data.contact.contact_name}\n          variant=\"record-home\"\n        />\n\n        <div className=\"slds-grid slds-wrap slds-m-top_medium slds-gutters\">\n          <div className=\"slds-col slds-col slds-size_2-of-3\">\n            <Tabs id=\"left\" className=\"slds-var-p-around_small\">\n              <TabsPanel label=\"Details\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <Input\n                    iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: \"Edit\",\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    }\n                    type=\"text\"\n                    defaultValue={data.contact.contact_name}\n                    placeholder=\"Contact name\"\n                    name=\"contact_name\"\n                    label=\"Contact name\"\n                    ref={register}\n                  />\n                  <Input\n                    iconRight={\n                      <InputIcon\n                        assistiveText={{\n                          icon: \"Edit\",\n                        }}\n                        name=\"Edit\"\n                        category=\"utility\"\n                      />\n                    }\n                    type=\"text\"\n                    defaultValue={data.contact.title}\n                    placeholder=\"Title\"\n                    name=\"company_title\"\n                    label=\"Title\"\n                    ref={register}\n                  />\n\n                  <Button onClick={handleSubmit(onSubmit)} type=\"submit\">\n                    Update\n                  </Button>\n                </form>\n              </TabsPanel>\n              <TabsPanel label=\"Locations\">\n\n              </TabsPanel>\n              <TabsPanel label=\"Opportunities\">\n\n              </TabsPanel>\n              <TabsPanel label=\"Proposals\">\n\n              </TabsPanel>\n              <TabsPanel label=\"Projects\">\n\n              </TabsPanel>\n            </Tabs>\n          </div>\n          <div className=\"slds-col slds-col slds-size_1-of-3\">\n            <Tabs id=\"right\" className=\"slds-var-p-around_small\">\n              <TabsPanel label=\"Activity\">\n                <ActivityTab />\n              </TabsPanel>\n            </Tabs>\n          </div>\n        </div>\n      </BrandBand>\n    </IconSettings>\n  );\n}\n","import React, {useState} from 'react';\nimport Moment from \"react-moment\";\n\nimport {\n\tBreadCrumb,\n\tPageHeader,\n\tIcon,\n\tBrandBand,\n\tTabs,\n\tTabsPanel,\n\tPageHeaderControl,\n\tButtonGroup,\n\tButton,\n\tDropdown,\n\tExpandableSection\n} from '@salesforce/design-system-react';\nimport {Link} from 'react-router-dom'\nimport Board from '@lourenci/react-kanban'\nimport '@lourenci/react-kanban/dist/styles.css'\nimport { useQuery, gql } from '@apollo/client';\n\nconst OPPORTUNITIES = gql`\n\t{\n\t  projects {\n\t    id\n\t    project_name\n\t    start_date\n\t    total_amount\n\t    stage\n\t    is_opportunity\n\t\tcreated_by {\n\t\t\tuser_name\n\t\t}\t   \n\t  }\n\t}\n`;\n\n\nexport function OpportunitiesList({match}) {\n\n  const { loading, error, data } = useQuery(OPPORTUNITIES);\t\n  const [opportunities, setOpportunities] = [];\n\t  const actions = () => (\n\t\t<PageHeaderControl>\n\t\t\t<ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n\t\t\t\t<ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n\t\t\t\t\t<Button variant=\"brand\" label=\"Add Opportunity\" onClick={toggleModal}/>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ButtonGroup>\n\t\t</PageHeaderControl>\n\t);\n\n  const trail = [\n\t\t<a href=\"javascript:void(0);\">Accounts</a>,\n\t\t<a href=\"javascript:void(0);\">Company One</a>,\n\t];\n\n\tfunction toggleModal() {\n\t\tconsole.log(data);\n\t}\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  let arr = [];\n\n  data.projects.map(opportunity => {\n  \tif (opportunity.is_opportunity) {\n  \t\tarr.push({id: opportunity.id, title: opportunity.project_name, description: opportunity.company_id, stage: opportunity.stage, created_by: opportunity.created_by.user_name, start_date: opportunity.start_date})\n  \t}\n  })\n\n  const board = {\n\t  columns: [\n\t    {\n\t      id: 1,\n\t      title: 'Contacted',\n\t      cards: arr\n\t    },\n      {\n        id: 2,\n        title: 'Open',\n        cards: []\n      },\n      {\n        id: 3,\n        title: 'Qualified',\n        cards: []\n      },\n      {\n        id: 4,\n        title: 'Nurturing',\n        cards: []\n      },\n      {\n        id: 5,\n        title: 'Closed',\n        cards: []\n      }\n\t  ]\n\t}\n\treturn (\n\t\t<BrandBand\n\t\t\t\tid=\"brand-band-lightning-blue\"\n\t\t\t\tclassName=\"slds-p-around_small\"\n\t\t\t\ttheme=\"lightning-blue\"\n\t\t\t>\n\t\t\t<PageHeader\n\t\t\t\ticon={\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tassistiveText={{ label: 'User' }}\n\t\t\t\t\t\tcategory=\"standard\"\n\t\t\t\t\t\tname=\"opportunity\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tinfo={`${data.projects.length} items`}\n\t\t\t\tlabel=\"OPPORTUNITIES\"\n\t\t\t\ttitle={`Your opportunities`}\n\t\t\t\tvariant=\"object-home\"\n\t\t\t\ttruncate\n\t\t\t\tonRenderActions={actions}\n\t\t\t/>\n\t\t\t<div className=\"slds-box slds-stages slds-p-vertical_none \">\n\t\t\t\t<div className=\"slds-grid slds-p-horizontal_none slds-gutters\">\n\t\t\t\t\t<Board  \n          allowAddColumn={false}\n          disableColumnDrag={true}\n\t\t\t\t\trenderColumnHeader={({ title }, { removeColumn, renameColumn, addCard }) => (\n\t\t\t\t\t    <div className=\"stage-header\">\n\t\t\t\t\t      <h2>{title}</h2>\n\t\t\t\t\t    </div>\n\t\t\t\t\t  )}\n\t\t\t\t\trenderCard={({ id,title,description, created_by,start_date }, { removeCard, dragging }) => (\n\t\t\t\t    <Card id={id} created_by={created_by} start_date={start_date} title={title} company={description} dragging={dragging}>\n\t\t\t\t      <button type=\"button\" onClick={removeCard}>Remove Card</button>\n\t\t\t\t    </Card>\n\t\t\t\t  )}\n\t\t\t\t\tinitialBoard={board} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BrandBand>\n\t)\n}\n\nfunction Stage(props) {\n\tconst title = props.title;\n\treturn (\n\t\t<div className=\"slds-col slds-p-horizontal_none stage\">\n\t\t\t<h2 className=\"stage__title\">{title}</h2>\n\t\t\t<h4 className=\"stage__total\">$100</h4>\n\t\t\t<div className=\"slds-box\">\n\t\t\t\t<Card title=\"Hey\" company=\"Whoa\" stage=\"Qualified\" date_closed=\"10/17/2020\" />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction Card(props) {\n\tconst title = props.title;\n\tconst company = props.company;\n\tconst stage = props.stage;\n\tconst created_by = props.created_by;\n\tconst date_closed = props.date_closed;\n\tconst start_date = props.start_date;\n\treturn (\n\t\t<div className=\"slds-box card\">\n\t\t\t<Link to={`/companies/${props.company}/opportunities/${props.id}`}>{title}</Link>\n\t\t\t<p>{company}</p>\n\t\t\t<p>Submitted by: {created_by}</p>\n\t\t\t<p>Expected start date: <Moment date={start_date} format=\"MM/DD/YYYY\" /></p>\n\t\t</div>\n\t)\n}","import React, { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport {\n DataTable,\n  DataTableColumn,\n  DataTableCell,\n  BrandBand,\n  PageHeaderControl,\n  PageHeader,\n  Input,\n  Button,\n  DropdownTrigger,\n  ButtonGroup,\n  Dropdown,\n  Icon,\n  IconSettings,\n  Modal} \nfrom '@salesforce/design-system-react';\n\nimport { gql, useMutation } from \"@apollo/client\";\n\n// const ADD_CONTACT = gql`\n//   mutation CreateContact($input: ContactInput) {\n//     createContact(input: $input) {\n//       id\n//       first_name\n//     }\n//   }\n// `;\n\nconst items = [\n  {\n    id: 1,\n    cfm: 30000,\n    water: true,\n    power: true,\n    building_code: 'WHT',\n    system_name: 'AHU-W1',\n    building: 'Western Hem Trade Ctr'\n  },\n  {\n    id: 2,\n    cfm: 30000,\n    water: true,\n    power: true,\n    building_code: 'WHT',\n    system_name: 'AHU-W2',\n    building: 'Western Hem Trade Ctr'\n  },\n  {\n    id: 3,\n    cfm: 13000,\n    water: true,\n    power: true,\n    building_code: 'WHT',\n    system_name: 'AHU-W3',\n    building: 'Western Hem Trade Ctr'\n  },\n];\n\nitems.map(item => {\n  if (item.cfm < 5000) {\n    item.price = 250\n    item.size = 'X-Small'\n  }\n  if (item.cfm >= 5000 && item.cfm <= 10000) {\n    item.price = 500\n    item.size = 'Small'\n  } \n  if (item.cfm >= 10001 && item.cfm < 30000) {\n    item.price = 1000\n    item.size = 'Medium'\n  }\n  if (item.cfm >= 30000) {\n    item.price = 1500\n    item.size = 'Large'\n  }\n})\n\nconst Price = ({ children,item, ...props }) => (\n  <DataTableCell title={children} {...props}>\n    {item.cfm <= 10000 &&\n      <span>$500</span>\n    }\n    {item.cfm >= 10001 && item.cfm < 30000 &&\n      <span>$1000</span>\n    }\n    {item.cfm >= 30000 &&\n      <span>$1500</span>\n    }\n  </DataTableCell>\n);\nPrice.displayName = DataTableCell.displayName;\n\nexport function AddProposal(props) {\n\n  const [selection, setSelection] = useState([]);\n  const [step, setStep] = useState(1);\n  const handleSelection = (e,data) => {\n    setSelection(data.selection);\n  }\n  return (\n    <IconSettings iconPath=\"/icons\">\n      {step === 1 &&\n        <div>\n          <DataTable\n            fixedLayout\n            items={items}\n            id=\"getCompanies\"\n            selection={selection}\n            onRowChange={handleSelection}\n            selectRows=\"checkbox\"\n          >\n            <DataTableColumn\n              label=\"Building code\"\n              property=\"building_code\" />\n            <DataTableColumn\n              label=\"System name\"\n              property=\"system_name\" />\n            <DataTableColumn\n              label=\"Building\"\n              property=\"building\" />\n            <DataTableColumn\n              label=\"CFM\"\n              property=\"cfm\" />\n            \n          </DataTable>\n         <Button onClick={() => setStep(2)}>Continue</Button>\n        </div>\n      }\n      {step === 2 &&\n        <div>\n          <DataTable\n            fixedLayout\n            items={selection}\n            id=\"selection\"\n          >\n            <DataTableColumn\n              label=\"Building code\"\n              property=\"building_code\" />\n            <DataTableColumn\n              label=\"System name\"\n              property=\"system_name\" />\n            <DataTableColumn\n              label=\"Building\"\n              property=\"building\" />\n            <DataTableColumn\n              label=\"CFM\"\n              property=\"cfm\" />\n            <DataTableColumn\n              label=\"Price\"\n              property=\"price\">\n            </DataTableColumn>\n            \n          </DataTable>\n\n          <h2>Proposal total: {selection.reduce((prev,next) => prev + next.price,0)}</h2>\n\n          <Button onClick={() => setStep(1)}>Back</Button>\n          <Button variant=\"brand\" onClick={() => setStep(2)}>Create proposal</Button>\n        </div>\n      }\n  </IconSettings>\n  )\n}\n","import React, {useState} from 'react';\nimport {\n  DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  DataTableRowActions,\n  Dropdown,\n  IconSettings,\n  CardFilter,\n} from \"@salesforce/design-system-react\";\nimport {AddProposal} from './ModalAddProposal';\nimport { ModalContext } from \"../ModalContext\";\n\nexport function ProposalTab(props){\n\t  const { handleModal } = React.useContext(ModalContext);\n\n\tconst [proposals, setProposals] = useState(props.proposals);\n\n\tconst triggerModal = (content,heading) => {\n\t    handleModal(<AddProposal />,'Add Proposal')\n\t  }\n\treturn (\n\t\t<div>\n\t\t\t<Card\n\t\t        id=\"ProposalCard\"\n\t\t        headerActions={\n\t\t          <Button label=\"Add Proposals\" onClick={() => triggerModal()}/>\n\t\t        }\n\t\t        filter={\n\t\t          proposals.length > 0 && (\n\t\t            <CardFilter\n\t\t              onChange={() => {\n\t\t                console.log(\"Change\");\n\t\t              }}\n\t\t            />\n\t\t          )\n\t\t        }\n\t\t        heading={`Proposal Versions (${proposals.length})`}\n\t\t        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n\t\t        empty={\n\t\t          proposals.length === 0 ? (\n\t\t            <CardEmpty heading=\"No Proposals\">\n\t\t              <Button\n\t\t                label=\"Add Proposals\"\n\t\t              />\n\t\t            </CardEmpty>\n\t\t          ) : null\n\t\t        }\n\t\t      >\n\t\t        <DataTable\n\t\t          fixedLayout\n\t\t          items={proposals}\n\t\t          id=\"proposals\"\n\t\t        >\n\t\t          <DataTableColumn label=\"Id\" property=\"id\"></DataTableColumn>\n\n\t\t          <DataTableColumn label=\"Created at\">\n\t\t          </DataTableColumn>\n\n\t\t          <DataTableRowActions\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 0,\n\t\t\t\t\t\t\tlabel: 'Edit',\n\t\t\t\t\t\t\tvalue: '1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\tlabel: 'Send to contacts',\n\t\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\tlabel: 'Remove',\n\t\t\t\t\t\t\tvalue: '3',\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t]}\n\t\t\t\t\tdropdown={<Dropdown length=\"7\" />}\n\t\t\t\t\t/>\n\t\t        </DataTable>\n\t\t      </Card>\n\t\t</div>\n\t)\n}","import React, {useState} from 'react';\nimport {\n  DataTable,\n  DataTableColumn,\n  DataTableCell,\n  ButtonGroup,\n  Button,\n  Card,\n  CardEmpty,\n  Icon,\n  DataTableRowActions,\n  Dropdown,\n  IconSettings,\n  CardFilter,\n} from \"@salesforce/design-system-react\";\n\nexport function ContactsTab(props) {\n\tconst [contacts, setContacts] = useState(props.contacts);\n\treturn (\n\t\t<Card\n\t        id=\"ContactCard\"\n\t        headerActions={\n\t          <Button label=\"Add Contacts\"/>\n\t        }\n\t        filter={\n\t          contacts.length > 0 && (\n\t            <CardFilter\n\t              onChange={() => {\n\t                console.log(\"Change\");\n\t              }}\n\t            />\n\t          )\n\t        }\n\t        heading={`Contacts (${contacts.length})`}\n\t        icon={<Icon category=\"standard\" name=\"contact\" size=\"small\" />}\n\t        empty={\n\t          contacts.length === 0 ? (\n\t            <CardEmpty heading=\"No Contacts\">\n\t              <Button\n\t                label=\"Add Contacts\"\n\t              />\n\t            </CardEmpty>\n\t          ) : null\n\t        }\n\t      >\n\t        <DataTable\n\t          fixedLayout\n\t          items={contacts}\n\t          id=\"contacts\"\n\t          on\n\t        >\n\t          <DataTableColumn label=\"Id\" property=\"id\"></DataTableColumn>\n\n\t          <DataTableColumn label=\"First name\" property=\"first_name\">\n\n\t          </DataTableColumn>\n\t          <DataTableColumn label=\"Last name\" property=\"last_name\">\n\t          \n\t          </DataTableColumn>\n\t          <DataTableColumn label=\"Email\" property=\"email\">\n\t          \n\t          </DataTableColumn>\n\t          <DataTableColumn label=\"Role\" property=\"role\">\n\t          \n\t          </DataTableColumn>\n\t          <DataTableRowActions\n\t\t\t\toptions={[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 0,\n\t\t\t\t\t\tlabel: 'Send Proposal',\n\t\t\t\t\t\tvalue: '1',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\tlabel: 'Email',\n\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\tlabel: 'Remove',\n\t\t\t\t\t\tvalue: '3',\n\t\t\t\t\t}\t\t\t\t]}\n\t\t\t\tdropdown={<Dropdown length=\"7\" />}\n\t\t\t\t/>\n\t        </DataTable>\n\t      </Card>\n\t)\n}","import React from 'react';\n\nexport function ActivityTab() {\n\treturn (\n\t\t<ul className=\"slds-timeline\">\n\t\t  <li>\n\t\t    <div className=\"slds-timeline__item_expandable slds-timeline__item_task\">\n\t\t      <span className=\"slds-assistive-text\">task</span>\n\t\t      <div className=\"slds-media\">\n\t\t        <div className=\"slds-media__figure\">\n\t\t          <button className=\"slds-button slds-button_icon\" aria-controls=\"task-item-base\">\n\t\t            \n\t\t            <span className=\"slds-assistive-text\">Toggle details for Review proposals for EBC deck with larger team and have marketing review this</span>\n\t\t          </button>\n\t\t          \n\t\t         </div>\n\t\t        <div className=\"slds-media__body\">\n\t\t          <div className=\"slds-grid slds-grid_align-spread slds-timeline__trigger\">\n\t\t            <div className=\"slds-grid slds-grid_vertical-align-center slds-truncate_container_75 slds-no-space\">\n\t\t              \n\t\t              <h3 className=\"slds-truncate\" title=\"Review proposals for EBC deck with larger team and have marketing review this\">\n\t\t                <a href=\"javascript:void(0);\">\n\t\t                  <strong>Opportunity created</strong>\n\t\t                </a>\n\t\t              </h3>\n\t\t              <div className=\"slds-no-flex\">\n\t\t                <span className=\"slds-icon_container slds-icon-utility-rotate\" title=\"Recurring Task\">\n\t\t                  \n\t\t                  <span className=\"slds-assistive-text\">Recurring Task</span>\n\t\t                </span>\n\t\t              </div>\n\t\t            </div>\n\t\t            <div className=\"slds-timeline__actions slds-timeline__actions_inline\">\n\t\t              <p className=\"slds-timeline__date\">9:00am | 3/20/2020</p>\n\t\t            </div>\n\t\t          </div>\n\t\t          <p className=\"slds-m-horizontal_xx-small\">\n\t\t            <a href=\"javascript:void(0);\">Steve Nash</a> created the opportunity\n\t\t          </p>\n\t\t          <article className=\"slds-box slds-timeline__item_details slds-theme_shade slds-m-top_x-small slds-m-horizontal_xx-small\" id=\"task-item-base\" aria-hidden=\"true\">\n\t\t            <ul className=\"slds-list_horizontal slds-wrap\">\n\t\t              <li className=\"slds-grid slds-grid_vertical slds-size_1-of-2 slds-p-bottom_small\">\n\t\t                <span className=\"slds-text-title slds-p-bottom_x-small\">Name</span>\n\t\t                <span className=\"slds-text-body_medium slds-truncate\" title=\"Charlie Gomez\">\n\t\t                  <a href=\"javascript:void(0);\">Charlie Gomez</a>\n\t\t                </span>\n\t\t              </li>\n\t\t              <li className=\"slds-grid slds-grid_vertical slds-size_1-of-2 slds-p-bottom_small\">\n\t\t                <span className=\"slds-text-title slds-p-bottom_x-small\">Related To</span>\n\t\t                <span className=\"slds-text-body_medium slds-truncate\" title=\"Tesla Cloudhub + Anypoint Connectors\">\n\t\t                  <a href=\"javascript:void(0);\">Tesla Cloudhub + Anypoint Connectors</a>\n\t\t                </span>\n\t\t              </li>\n\t\t            </ul>\n\t\t            <div>\n\t\t              <span className=\"slds-text-title\">Description</span>\n\t\t              <p className=\"slds-p-top_x-small\">Need to finalize proposals and brand details before the meeting</p>\n\t\t            </div>\n\t\t          </article>\n\t\t        </div>\n\t\t      </div>\n\t\t    </div>\n\t\t   </li>\n\t\t</ul>\n\t)\n}","import React from 'react'\n\nexport function JourneyStages() {\n\treturn (\n\t\t<div className=\"slds-grid slds-wrap slds-m-top_medium\">\n          <div className=\"slds-col slds-col slds-size_3-of-3\">\n            <div className=\"slds-path slds-box\">\n              <div className=\"slds-grid slds-path__track\">\n                <div className=\"slds-grid slds-path__scroller-container\">\n                  <div className=\"slds-path__scroller\" role=\"application\">\n                    <div className=\"slds-path__scroller_inner\">\n                      <ul className=\"slds-path__nav\" role=\"listbox\" aria-orientation=\"horizontal\">\n                        <li className=\"slds-path__item slds-is-complete\" role=\"presentation\">\n                          <a aria-selected=\"false\" className=\"slds-path__link\" href=\"javascript:void(0);\" id=\"path-6\" role=\"option\" tabindex=\"-1\">\n                            <span className=\"slds-path__stage\">\n                              <span className=\"slds-assistive-text\">Stage Complete</span>\n                            </span>\n                            <span className=\"slds-path__title\">Contacted</span>\n                          </a>\n                        </li>\n                        <li className=\"slds-path__item slds-is-complete\" role=\"presentation\">\n                          <a aria-selected=\"false\" className=\"slds-path__link\" href=\"javascript:void(0);\" id=\"path-7\" role=\"option\" tabindex=\"-1\">\n                            <span className=\"slds-path__stage\">\n                              <span className=\"slds-assistive-text\">Stage Complete</span>\n                            </span>\n                            <span className=\"slds-path__title\">Open</span>\n                          </a>\n                        </li>\n                        <li className=\"slds-path__item slds-is-complete\" role=\"presentation\">\n                          <a aria-selected=\"false\" className=\"slds-path__link\" href=\"javascript:void(0);\" id=\"path-8\" role=\"option\" tabindex=\"-1\">\n                            <span className=\"slds-path__stage\">\n                              <span className=\"slds-assistive-text\">Stage Complete</span>\n                            </span>\n                            <span className=\"slds-path__title\">Unqualified</span>\n                          </a>\n                        </li>\n                        <li className=\"slds-path__item slds-is-current slds-is-active\" role=\"presentation\">\n                          <a aria-selected=\"true\" className=\"slds-path__link\" href=\"javascript:void(0);\" id=\"path-9\" role=\"option\" tabindex=\"0\">\n                            <span className=\"slds-path__stage\">\n                              <span className=\"slds-assistive-text\">Current Stage:</span>\n                            </span>\n                            <span className=\"slds-path__title\">Nurturing</span>\n                          </a>\n                        </li>\n                        <li className=\"slds-path__item slds-is-incomplete\" role=\"presentation\">\n                          <a aria-selected=\"false\" className=\"slds-path__link\" href=\"javascript:void(0);\" id=\"path-10\" role=\"option\" tabindex=\"-1\">\n                            <span className=\"slds-path__stage\">\n                            </span>\n                            <span className=\"slds-path__title\">Closed</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"slds-grid slds-path__action\">\n                  <span className=\"slds-path__stage-name\">Stage: Unqualified</span>\n                  <button className=\"slds-button slds-button_brand slds-path__mark-complete\">\n                    <svg className=\"slds-button__icon slds-button__icon_left\" aria-hidden=\"true\">\n                    </svg>Mark Status as Complete</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\t)\n}","import React, {useState,useEffect} from 'react';\nimport { useForm,Controller } from \"react-hook-form\";\nimport CurrencyFormat from 'react-currency-format';\n\n\nimport moment from 'moment';\nimport {\n  PageHeader,\n  PageHeaderControl,\n  IconSettings,\n  Icon,\n  Tabs,\n  TabsPanel,\n  ButtonStateful,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  BrandBand,\n  Input,\n  Datepicker,\n  InputIcon\n} \nfrom '@salesforce/design-system-react'; \nimport {ProposalTab} from './ProposalTab';\nimport {ContactsTab} from './ContactsTab';\nimport {ActivityTab} from './ActivityTab';\nimport {JourneyStages} from './JourneyStages';\n\n\nexport function OpportunityDetail({match,props}) {\n  const { register, handleSubmit, reset, watch, control, setValue } = useForm();\n  const [opportunityItems, setOpportunityItems] = [];\n\n  const [opportunity, setOpportunity] = useState({\n    id: 1,\n    name: 'Opportunity name',\n    expected_start_date: new Date(),\n    actual_start_date: new Date(),\n    stage: 'In progress',\n    estimated_project_length: 12,\n    expected_kickoff_call: new Date(),\n    actual_kickoff_call: new Date(),\n    primary_contact: 'Jon Senterfitt',\n    notes: 'These are notes woooo',\n    total_amount: 12000,\n    is_opportunity: true,\n    proposals: [\n      {\n        id: 1,\n        created_at: new Date(),\n        proposal_items: [\n          {\n            id: 1,\n            cfm: 13000,\n            draw_push: true,\n            building_name: \"Manchester\",\n            building_code: \"AHU-1\",\n            price: 1500\n          }\n        ]\n      }\n    ],\n    contacts: [\n      {\n        id: 1,\n        first_name: \"Jon\",\n        last_name: \"Senterfitt\",\n        email: \"thetwosents@icloud.com\",\n        phone: 2144780989,\n        is_primary: true,\n        role: \"Director of engineering\"\n      },\n      {\n        id: 2,\n        first_name: \"Jon\",\n        last_name: \"Senterfitt\",\n        email: \"thetwosents@icloud.com\",\n        phone: 2144780989,\n        is_primary: false,\n        role: \"Director of stuff\"\n      },\n      {\n        id: 3,\n        first_name: \"Jon\",\n        last_name: \"Senterfitt\",\n        email: \"thetwosents@icloud.com\",\n        phone: 2144780989,\n        is_primary: false,\n        role: \"Director of things\"\n      }\n    ]\n  },{\n    id: 2,\n    name: 'Project name',\n    expected_start_date: new Date(),\n    actual_start_date: new Date(),\n    stage: 'Scheduling',\n    estimated_project_length: 12,\n    expected_kickoff_call: new Date(),\n    actual_kickoff_call: new Date(),\n    primary_contact: 'Jon Senterfitt',\n    notes: 'These are notes woooo',\n    total_amount: 12000,\n    is_opportunity: false,\n    proposals: [\n      {\n        id: 1,\n        created_at: new Date(),\n        proposal_items: [\n          {\n            id: 1,\n            cfm: 13000,\n            draw_push: true,\n            building_name: \"Manchester\",\n            building_code: \"AHU-1\",\n            price: 1500\n          }\n        ]\n      }\n    ],\n    contacts: [\n      {\n        id: 1,\n        first_name: \"Jon\",\n        last_name: \"Senterfitt\",\n        email: \"thetwosents@icloud.com\",\n        phone: 2144780989,\n        is_primary: true,\n        role: \"Director of engineering\"\n      },\n      {\n        id: 2,\n        first_name: \"Jon\",\n        last_name: \"Senterfitt\",\n        email: \"thetwosents@icloud.com\",\n        phone: 2144780989,\n        is_primary: false,\n        role: \"Director of stuff\"\n      },\n      {\n        id: 3,\n        first_name: \"Jon\",\n        last_name: \"Senterfitt\",\n        email: \"thetwosents@icloud.com\",\n        phone: 2144780989,\n        is_primary: false,\n        role: \"Director of things\"\n      }\n    ]\n  })\n\n  const actions = () => (\n      <React.Fragment>\n        <PageHeaderControl>\n          <ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\n            <Button label=\"New Contact\" />\n            <Button label=\"New Proposal\" />\n            <Dropdown\n              align=\"right\"\n              assistiveText={{ icon: 'More Options' }}\n              iconCategory=\"utility\"\n              iconName=\"down\"\n              iconVariant=\"border-filled\"\n              id=\"dropdown-record-home-example\"\n              options={[\n                { label: 'Share', value: 'A0' },\n                { label: 'Print', value: 'B0' },\n                { label: 'Create project', value: 'C0' },\n                { type: 'divider' },\n                { label: 'Remove opportunity', value: 'D0' },\n              ]}\n            />\n          </ButtonGroup>\n        </PageHeaderControl>\n      </React.Fragment>\n  );  \n\n  const details = [\n    {\n      label: 'Price',\n      content: <CurrencyFormat value={opportunity.total_amount} displayType={'text'} thousandSeparator={true} prefix={'$'} />,\n      truncate: true\n    },\n    { label: 'Created at', content: 'Sept 28, 2020' },\n    {\n      label: 'Owned by',\n      content: <a href=\"javascript:void(0);\">Steve Nash</a>,\n    },\n    {\n      label: 'Expected start date',\n      content: 'Jan 5, 2020',\n      truncate: true,\n    },\n    {\n      label: 'Company',\n      content: 'Coca Cola',\n      truncate: true,\n    },\n    {\n      label: 'Location',\n      content: '311 Sutton Gate',\n      truncate: true,\n    },\n    {\n      label: 'Region',\n      content: 'Atlanta',\n      truncate: true,\n    },\n    {\n      label: 'On-site contact',\n      content: <a href=\"javascript:void(0);\">Jimmy Toms</a>,\n      truncate: true,\n    },\n  ];\n\n  const onSubmit = data => console.log(data);\n\n  return (\n\n    <IconSettings iconPath=\"/icons\">\n      <BrandBand\n          id=\"brand-band-lightning-blue\"\n          className=\"slds-p-around_small\"\n          theme=\"lightning-blue\"\n        >\n        <PageHeader\n          details={details}\n          icon={\n            <Icon\n              assistiveText={{ label: 'User' }}\n              category=\"standard\"\n              name=\"account\"\n            />\n          }\n          label=\"Opportunity\"\n          onRenderActions={actions}\n          title={opportunity.name}\n          variant=\"record-home\"\n        />\n\n      <JourneyStages />\n\n        <div className=\"slds-grid slds-wrap slds-m-top_medium slds-gutters\">\n            <div className=\"slds-col slds-col slds-size_2-of-3\">\n              <Tabs id=\"left\" className=\"slds-var-p-around_small\">\n                <TabsPanel label=\"Details\">\n                  <form onSubmit={handleSubmit(onSubmit)}>\n                    <Controller\n                      as={\n                        <label htmlFor=\"name\">Opportunity name\n                        <Input name=\"name\" defaultValue={opportunity.name} type=\"text\" ref={register} /></label>\n                      }\n                      control={control}\n                      name=\"name\"\n                      defaultValue={opportunity.name}\n                    />\n                    <Controller\n                      as={\n                        <label htmlFor=\"estimated_project_length\">Estimated project length days\n                        <Input name=\"estimated_project_length\" type=\"number\" defaultValue={opportunity.estimated_project_length} ref={register} /></label>\n                      }\n                      control={control}\n                      name=\"estimated_project_length\"\n                      defaultValue={opportunity.estimated_project_length}\n                    />\n                    <Controller\n                      render={({ onChange, onBlur, value, name }) => (\n                        <Datepicker\n                          labels={{\n                            label: 'Expected start date',\n                          }}\n                          onChange={(event, data) => {\n                            let opp = opportunity;\n                            opp.expected_start_date = data.date;\n                            setOpportunity(opp);\n                            setValue('expected_start_date',data.date);\n                          }}\n                          onCalendarFocus={(event, data) => {\n                            if (this.props.action) {\n                              const dataAsArray = Object.keys(data).map((key) => data[key]);\n                              this.props.action('onCalendarFocus')(event, data, ...dataAsArray);\n                            } else if (console) {\n                              console.log('onCalendarFocus', event, data);\n                            }\n                          }}\n                          formatter={(date) => {\n                            return date ? moment(date).format('M/D/YYYY') : '';\n                          }}\n                          parser={(dateString) => {\n                            return moment(dateString, 'MM-DD-YYYY').toDate();\n                          }}\n                          value={opportunity.expected_start_date}\n                        />\n                      )}\n                      control={control}\n                      name=\"expected_start_date\"\n                      defaultValue={opportunity.expected_start_date}\n                    />\n                    <Controller\n                      render={({ onChange, onBlur, value, name }) => (\n                        <Datepicker\n                          labels={{\n                            label: 'Actual start date',\n                          }}\n                          onChange={(event, data) => {\n                            let opp = opportunity;\n                            opp.actual_start_date = data.date;\n                            setOpportunity(opp);\n                            setValue('actual_start_date',data.date);\n                          }}\n                          onCalendarFocus={(event, data) => {\n                            if (this.props.action) {\n                              const dataAsArray = Object.keys(data).map((key) => data[key]);\n                              this.props.action('onCalendarFocus')(event, data, ...dataAsArray);\n                            } else if (console) {\n                              console.log('onCalendarFocus', event, data);\n                            }\n                          }}\n                          formatter={(date) => {\n                            return date ? moment(date).format('M/D/YYYY') : '';\n                          }}\n                          parser={(dateString) => {\n                            return moment(dateString, 'MM-DD-YYYY').toDate();\n                          }}\n                          value={opportunity.actual_start_date}\n                        />\n                      )}\n                      control={control}\n                      name=\"actual_start_date\"\n                      defaultValue={opportunity.actual_start_date}\n                    />\n                    <Input type=\"submit\" />\n                  </form>\n                </TabsPanel>\n                <TabsPanel label=\"Proposals\">\n                  <ProposalTab proposals={opportunity.proposals} />\n                </TabsPanel>\n                <TabsPanel label=\"Contacts\">\n                  <ContactsTab contacts={opportunity.contacts} />\n                </TabsPanel>\n              </Tabs>\n            </div>\n             <div className=\"slds-col slds-col slds-size_1-of-3\">\n                <Tabs id=\"right\" className=\"slds-var-p-around_small\">\n                  <TabsPanel label=\"Activity\">\n                    <ActivityTab />\n                  </TabsPanel>\n                  <TabsPanel label=\"Notes\">\n\n                  </TabsPanel>\n                </Tabs>\n            </div>\n        </div>\n      </BrandBand>\n      </IconSettings>\n  )\n}","import React from \"react\";\nimport \"../index.css\";\n// import App from \"../App\";\nimport \"../App.css\";\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { ModalProvider } from \"./ModalContext\";\n\n// import store from '../app/store';\nimport store from \"../redux/store\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { CompanyForm } from \"../components/companies/ModalAddCompanyForm\";\n\nimport {\n  PageHeader,\n  GlobalHeader,\n  GlobalNavigationBar,\n  IconSettings,\n  GlobalNavigationBarRegion,\n  GlobalNavigationBarLink,\n  GlobalHeaderNotifications,\n  AppLauncher,\n  AppLauncherExpandableSection,\n  AppLauncherTile,\n  Button,\n  Icon,\n  Popover,\n} from \"@salesforce/design-system-react\";\nimport { Header } from \"./Header\";\nimport { NavBar } from \"./Navbar\";\n\n// View imports\nimport { CompanyDetail } from \"../components/companies/CompanyDetail\";\nimport LocationDetail from \"../components/locations/LocationDetail\";\nimport { CompaniesList } from \"../components/companies/CompaniesList\";\nimport { ContactsList } from \"../components/contacts/ContactsList\";\nimport { ContactDetail } from \"../components/contacts/ContactDetail\";\nimport { OpportunitiesList } from \"../components/opportunities/OpportunitiesList\";\nimport { OpportunityDetail } from \"../components/opportunities/OpportunityDetail\";\n\nconst client = new ApolloClient({\n  uri: \"http://127.0.0.1:4000/graphql\",\n  // uri: \"http://bba-server.herokuapp.com/graphql\",\n  cache: new InMemoryCache(),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log(\"graphQLErrors\", graphQLErrors);\n    console.log(\"networkError\", networkError);\n  },\n});\n\nconst Root = () => (\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <ModalProvider>\n        <Router>\n          <IconSettings iconPath=\"/icons\">\n            <div className=\"App\">\n              <Header />\n              <NavBar />\n\n              <Route exact path=\"/\" component={CompaniesList} />\n\n              <Route exact path=\"/companies\" component={CompaniesList} />\n              <Route\n                exact\n                path=\"/companies/:companyId\"\n                component={CompanyDetail}\n              />\n              <Route\n                exact\n                path=\"/companies/:companyId/locations/:locationId\"\n                component={LocationDetail}\n              />\n\n              <Route exact path=\"/contacts\" component={ContactsList} />\n              <Route\n                exact\n                path=\"/contacts/:contactId\"\n                component={ContactDetail}\n              />\n\n              <Route\n                exact\n                path=\"/opportunities\"\n                component={OpportunitiesList}\n              />\n\n              <Route\n                exact\n                path=\"/companies/:companyId/opportunities/:opportunityId\"\n                component={OpportunityDetail}\n              />\n            </div>\n          </IconSettings>\n        </Router>\n      </ModalProvider>\n    </Provider>\n  </ApolloProvider>\n);\n\nexport default Root;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Root from \"./components/Root\";\r\n// import store from \"./redux/store\";\r\n// import store from \"./app/store\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}